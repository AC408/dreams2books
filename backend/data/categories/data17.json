[
    {
        "Title": "designing and programming cics applications",
        "description": "Presented as a practical approach suitable for new users of IBM's mainframe system, \"Designing & Programming CICS Applications\" is designed to give insights into the range of features provided by CICS. Written for experienced users, the book explains how to integrate existing mainframe systems with newer technologies.",
        "authors": "['John Horswill']",
        "infoLink": "http://books.google.nl/books?id=73HYZLODkXEC&dq=Designing+and+Programming+CICS+Applications&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "For many companies, large or small, the mission-critical applications run in the CICS environment. The difficulty of opening up those business logic and data for access through web interface often comes from the fact that the mainframe programmers don't know much about the web technology while the new web guys usually know little about CICS. This book bridges the gap between the two camps, and provides step-by-step instruction on how to apply and integrate the different technologies including Java, MQSeries, etc. This book is a must-read for anyone responsible integrating CICS and web interface. The only drawback is that this book focuses on OS/390, while there are many CICS applications running in other platforms such as OS/2.",
                "review/helpfulness": "23/25",
                "num_reviews": 25
            },
            {
                "review/text": "Together with the COBOL programming language, IBM's CICS (Customer Information Control System) has formed the most common set of tools for building customer transaction applications in the world of large enterprise mainframe computing. CICS is used by 470 of the Fortune 500 companies to process 20 billion transactions a day. Written by John Horswill &amp; Members of the CICS Development Team at IBM Hursley, Designing And Programming CICS Applications introduces new users of IBM's mainframe (OS/390) to CICS features. Experienced users will learn how to integrate existing mainframe systems with newer technologies, including the Web, CORBA, Java, CICS clients, and Visual Basic; as well as how to link MQSeries and CICS. Whether developers have thousands of terminals or a client/server environment with workstations and LANs exploiting modern technology such as graphical interfaces or multimedia, Designing And Programming CICS Applications gives them the power to create, modernize, and extend CICS applications. A CD-ROM is included.",
                "review/helpfulness": "6/9",
                "num_reviews": 9
            }
        ]
    },
    {
        "Title": "office 2003 programming real world applications",
        "description": "* Builds real applications that can be customized and used commercially. * Provides real-world examples, each of which offers a fundamental lesson in approaching data structure and code. * Friendly, open and targeted chapters that can be absorbed one lesson at a time.",
        "authors": "['Ty Anderson']",
        "infoLink": "http://books.google.nl/books?id=GNKg6PP_fXcC&dq=Office+2003+Programming:+Real+World+Applications&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "This is a must have book for anyone who uses MS Office tools.It makes great use of Office 2003 its new .Net integrated features.When the company I work for broke up into business units I suddenly was wearing many hats. With little experience in administation, I quickly began to seek out ways to streamline the process. Try to reduce things like double entrys, nagging action reports, and headaches from poor follow up on sales calls.With that in mind I bought Ty Anderson's book.This book was more advanced than my skill level when I bought it, but it's helped me to finally get a handle on vb.net. The book is chock full of meat and potatoes stuff that bases itself from software I do know, things like excel, word and some access.Like the editorial review says, it has ready to go apps.All you need is Office 2003pro and Visual Studio Tools for Office and your in business.The author does a great job of breaking down the code in a very straight forward, no words wasted kind of way. And provides great apps which offer another way to reverse understand things.I made use of the word doc generator and outlook to organise my client contact info and todo lists. It got me praise and recognition at my work, Now Im a the team leader!A Great investment.Ive bought a whole mess of books trying to filter out usefull stuff. This one is all about usefull applications for Office.If your a novice like me ,it will get you excited about learning to be a developer. If your skill set is more advanced it will be even more usefull, as it provides the building blocks for an endless array of usefull applications.Two thumbs way up..I'd also recommend Inside Access 2003.",
                "review/helpfulness": "17/19",
                "num_reviews": 19
            },
            {
                "review/text": "This was a book I had been looking for for a long time. The content will be a treasure trove of ideas for those interested in office programming.However...(This relates to chapter 7, the first chapter I jumped to)The code as it is in the book will NEVER work. Even though no errata for the book are listed, the code in the book differs significantly from the code available for download from the apress site. So I changed my code to reflect that. This fixed some of the bugs, but others remained.Not until I changed the code to call the correct database column names (which are mismatched in the book AND in the downloadable code) did the webservice work.Who proofreads these books anyway? This doesn't exactly instill a lot of confidence in apress books. Not exactly $39.99 well spent.A book I might still recommend to others, but only because it's the only book of its kind available right now.",
                "review/helpfulness": "11/11",
                "num_reviews": 11
            },
            {
                "review/text": "The emphasis of the book is given by the subtitle - 'real world applications'. Anderson essentially provides 9 use cases of programming MS Office 2003; one per chapter and written in Visual Basic. These cases can be valuable to you on several levels.Firstly, if you are new to Visual Basic, then the book gives extended examples to improve your understanding.Secondly, and obviously, to see how you can program the various and myriad components of Office 2003, from the UI to accessing a database and using XML. Very nontrivial, as you might appreciate from the level of detail in the chapters.Thirdly, it is to find that one of the chapters actually fills a current need, and so you can just copy its code, perhaps with only some simple changes. While the book certainly suggests you can do this, it may actually be rare in practice.",
                "review/helpfulness": "6/6",
                "num_reviews": 6
            },
            {
                "review/text": "If you want to know how to use Office as a development platform for your business applications, then pick a copy of this book. The author shows you how to integrate the Office Product line with databases, web services, and ASP.NET using real-world business situations.I was especially impressed with the service request application that demonstrates how to kick off and manage a workflow using InfoPath and web services. Very useful stuff if you need to push information from your office out to the web. There is also a lot of information on how to build Office Add-Ins, manipulating the conent of Excel documents, building email templates, and creating reports. Overall, very useful, I highly recommend it, and definately worth every penny I paid for it!",
                "review/helpfulness": "5/5",
                "num_reviews": 5
            }
        ]
    },
    {
        "Title": "struts kick start",
        "description": "Explains how to build applications with Jakarta Struts, discusses the development framework and its architecture, and provides sample applications.",
        "authors": "['James Turner', 'Kevin Bedell']",
        "infoLink": "http://books.google.com/books?id=lNv8c_sjB8IC&dq=Struts+Kick+Start&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "Struts Kick StartI started learning how to use the Struts framework in late in 2001, after I became fed-up with hacking web applications together with the digital equivalent of &quot;Duct-tape Engineering&quot;. At that time there were no books available for the budding Struts developer, &quot;Read The Fine Manual&quot; was not an option ... you read the website, you read the code or you asked questions on the mailing list. This situation finally changed this fall with the release of a flurry of titles dedicated to Struts. I present here my thoughts on one of the latest: &quot;Struts Kick Start&quot;.What is Struts?Struts is a framework for developing web applications. It is a distilation of the current set of known best practices into a working code set that can be extended to meet almost any web application requirements. It part of the Jakarta Project at the Apache Software Foundation.What do I know about Struts?I have been developing web applications, using Java, for four years and using struts for over a year, and am a regular participant on the Struts mailing list. I was also a technical reviewer for one of the other Struts Books released this fall and was recently invited to speak at the University of Wisconsin, Eau Claire on the use of Struts.What's good about this book?There are many excellent things that I could point to. I particularly like the obvious depth of research that accompanies this book. There is a very interesting history of the development of the MVC design pattern and they even name the inventor. Do you know who invented MVC? If you want to know, buy the book!The chapters cover everything that you will need to know, in the order you are most likely to need to know it. There's even a chapter explaining the &quot;struts-config.xml&quot; file's DTD! (You may want to skip that on the first few readings :-)There is good coverage of the Struts taglibs. I see a lot of questions about these on the mailing lists, so this information is very timely and it looks very well explained.I like the coverage of other open source tools that work well with Struts. This is an important point because Struts does not do everything for you (by design), so there will be areas that will benefit from other tools. I'm looking forward to trying out some of their recommendations and easing my own Struts development lifecycles.What's not so good?Just one niggle, and it's more of a programming style issue, but in their example code they have references to their business objects. They explain that it is important to separate out business logic from action logic, which it is, but then proceed to use their business object within the action.Now, I realise that example code is not the same thing as robust, production-ready code, but when people are first learning a language or framework, they tend to copy exactly what they see in the book they are learning from. Even though example code should be light on error checking (for reasons of readabilty), it should be heavy on correctness and good style.Should you rush out and buy it?If you are about to use Struts on a project, are new to Struts and need dead tree documentation for those RTFM moments or are evaluating Struts for future projects, then you absolutely need this book.If you are an intermediate Struts user, then this book would still be very useful to you and I can certainly recommend it.If you are an experienced Struts user, then you've almost certainly exchanged emails with James or Kevin, on the Struts mailing list, so you can make your own mind up!",
                "review/helpfulness": "14/18",
                "num_reviews": 18
            },
            {
                "review/text": "I disagree with the other reviewers that are complaining about the example applications or lack of advanced features. I think books that have examples that are too complex or advanced get away from helping you learn the basics because the examples are too complicated to read quikcly when you are in a hurry. With Struts Kick Start, I can go right to the place in the book that explains the specific thing I'm looking for quickly.I've looked at all the available books on Struts and I own three of them. Struts Kick Start is the one I have found the most useful in helping me learn because it provides the best coverage of the basics of Struts and has many more coding samples for the struts tags than any of the others. The others refer you to the site for struts tags or just seem to replicate what is already on-line. Struts Kick Start explains each one in detail and gives sample code that you can cut and paste to use on your own. It also provides some great examples of unit testing and build scripts that I've been able to put to use without too much pain.This is a great, useful book.",
                "review/helpfulness": "10/12",
                "num_reviews": 12
            },
            {
                "review/text": "I bought this book to learn Struts: not to learn ABOUT struts. The authors clearly have a firm grasp on the topic, but unfortunately, this book is more of a 481 page example of them showing the reader what they know than it is instructing the reader in how to learn what they know. I have had this book for several weeks, and have read through many of the chapters before finally coming to the conclusion that this book is really quite worthless.For example, one of the main selling points for me was that Torque was covered - and even included on the CD. But when I got to Chapter 6, where Torque is discussed (all three paragraphs of it), it's such a &quot;high-level&quot; overview, that I'm no better off than when I started. Here's a quote from the book: &quot;After you've set up the XML file [the code preceeds this quote] and a property file [no code, no explination - what property file?] that tells Torque which database and connection pooling scheme to use, you use Ant [how?] to have Torque automatically use both the SQL files [which SQL files?] to create the database and the Java files to map classes to tables.&quot; p102. Do you see how vague and unhelpful this is?",
                "review/helpfulness": "9/10",
                "num_reviews": 10
            },
            {
                "review/text": "I'm totally surprised at the good reviews this book has been given. I purchased it based on those reviews and now ... well. The book is wordy and lacks some basic get you started information you would expect from a book with a title containing the words \"kick start.\" The authors got it part right - it should read, \"Start kicking.\" The authors seem to be upholding a long-standing java tradition: make it complex and avoid fundamental procedural steps. For what its worth, when I'm learning something new - upfront - I need to take baby steps - confidence builds and learning is accelerated on and up. Chapter 3 dives directly into a \"hello world\" application without one single word in the entire book devoted to \"Here is what you need to follow along boys and girls...\" Not one line of \"before we begin, do this and do that.\" So if your looking for a good text on \"guessing with struts\" look no more. I give it two stars because there must be some value somewhere in these pages.",
                "review/helpfulness": "8/9",
                "num_reviews": 9
            },
            {
                "review/text": "The Struts framework is becoming a de-facto standard for developing interactive web applications using servlets. If this type of development is something you are responsible for, you should consider getting a copy of this book to help you take the next step in your professional development. The \"kickstart\" concept means that the authors don't spend a lot of time on fluff or auxilllary material. You are quickly exposed to the core concepts along with a large number of examples to illustrate those technical points.There are a number of assumptions made in this book. The web server used for examples is the Jakarta Tomcat server. If you're using that platform for your development, you'll be very comfortable with the book. The authors also assume a prerequisite knowledge of JSP, as well as the use of MySQL for writing applications that access data from relational databases. From a cost perspective, this is all good in that you can set up your test environment for free. On the other hand, if you use other packages such as IBM's Websphere Application Server and DB2, you'll have to make the adjustments on your own.The book is very comprehensive in what it covers, and there is an abundance of code to help you see working examples that you can use for your own purposes. Since I'm not as \"up to speed\" on servlet technology as I'd like to be, I'd prefer a somewhat slower style for learning. But that's not a knock on the book as much as my own personal preference.ConclusionIf you're comfortable with web applications, deployment, and servlet coding, this will be a good choice for getting started with Struts. If you're still relatively new to all this, you may want to get a book that doesn't assume quite so much to start with. Once you get familiar with Struts, this would be a good companion book for examples.",
                "review/helpfulness": "6/7",
                "num_reviews": 7
            },
            {
                "review/text": "This book fills a major gap in the Struts literature: it shows you how to solve real-world problems using Struts. If you want to learn the details of how Struts works, you need a different book. However, if you're sick of wasting an hour every time you need to figure out how to use an html tag you've never used before, this is the book for you.I'm learning Struts so I can use it to write a commercial application. I didn't buy this book until I had finished the first two modules of my app, and I really regret it. I remember wasting 3 hours one day figuring out how to use &lt;html:select&gt; in conjunction with &lt;html:optionsCollection&gt; to render a lookup table from my database. I'm pretty handy with Google, but the fact is, there's not a lot of solid information out there about how to use the Struts tag libraries. This book contains the exact code I needed - I could have copied it into my JSP and been on my way in less than a minute.It's obvious to me that Turner and Bedell struggled through Struts the way I did, and decided to write a book with all the answers once they figured the answers out. They did a fantastic job. They cover all the aggravating details you're going to face writing real apps, and they explain the solutions clearly and accurately.Bottom line: After reading the three major Struts books, I can tell you that none of the books alone will get you where you need to go. I recommend &quot;Programming Jakarta Struts&quot; for learning Struts theory, and this book for learning how to get real work done.",
                "review/helpfulness": "5/6",
                "num_reviews": 6
            },
            {
                "review/text": "This was the first book that I bought in order to learn Struts. I found that the text was generally unhelpful as it was written from the point of view of Struts 1.0x, whereas 1.1 invalidates much of what the authors talk about (you might as well rip out the chapter about validation and throw it away, because NOTHING in there is valid), assuming it wasn't bug-ridden anyway.The supporting website hasn't been updated since May, 2003, and the links to updated files are all dead (the chapter 3 hello program on the CD doesn't work, so you're SOL now).The ONLY saving grace is the CD.I suggest you look elsewhere for an introductory book; this book seems to be hacked out quickly to capitalize on the Struts phenomenon and just as quickly abandoned.",
                "review/helpfulness": "4/5",
                "num_reviews": 5
            },
            {
                "review/text": "First, this book was published in 2002, which means it was written in 2001. Rather out of date.I have three very major complaints.1. The author, like almost all Struts book authors, starts right off the bat giving examples of JSP files that include Struts tags...a topic that is not covered until many chapters later! So the beginner (me) is left scratching his head wondering what all this gibberish is about. How much easier it would have been to provide the early examples in HTML and then later show them using tags AFTER tags have been introduced and discussed.2. There are l-o-n-g sections of nothing but HTML/JSP code with almost no commenting. Do ANY publishers get it that they don't need to print EXACT code listings? The printed page could have arrows and circles and bold print highlighting codes snipets and discussing what they do. This book leaves it up to the reader to find the important nuggets in hundreds of lines of code.3. Certain sections are so terse as to be meaningless, and even go so far as to tell the reader to look at the Struts documentation and then you'll understand it all. HELLO?? That's why I bought the &%$#!! book.On the plus side, the font is nice, there is plenty of white space and it is easy on the eyes.Skip this one. This is my 5th Struts book and I'm STILL looking for a good one. I think a good rule is that if a book is written by an open-source code author, avoid it like the plague. Coders are NOT writers. Unfortunately, the editors don't seem to be writers either. Maybe that job was outsourced...",
                "review/helpfulness": "4/5",
                "num_reviews": 5
            },
            {
                "review/text": "I would highly recommend this book for anyone looking to get a practical, working knowledge of Struts in a short amount of time. It also gives clear advise and recommendations on design issues and technology choices not only for using Struts and JSPs, but also on integrating with back-end databases, Enterprise Java Beans systems, and Web Services systems.The book develops a practical Struts application, including database integration, that walks through all the real world development stages from design to deployment, highlighting best practices and key issues at each step. While doing all this, the book is brief and to the point. This keeps it fast moving and interesting while providing a useful working knowledge of Struts. The authors provide clear recommendations on manyissues. Design or technology options that exist at various points are highlighted and the trade-offs identified, but the authors do not get bogged down in technical digressions at these points, but rather state their recommendation with their reasons and then refers to other resources for the reader who wishes to delve into the issues further.In addition to the basic Struts application, the conceptual background is clearly laid out and chapters on the details for all the Struts tags are provided. Another highlight of the book are the chapters on advanced topics of integrating Struts with Enterprise Java Beans and with Web Services. In a brief amount of space, these chapters walk through all the steps to set up and run an example application that can serve as a model for real world development. Again, all the key design and technology decisions are highlighted and explained.A big plus with this book is that all the example applications and the technology products needed to set them up and run them are included on the CD that comes with the book, so you can be sure you are working with the exact same software and setup that is documented in the book.",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "When I am writing this review, the price of a used copy starts from 56 cents. You can imagine what quality you can expect from a book whose owner is so eagerly willing to part with it.I did read this book and here is what I have to say. In short, do not buy this book or even read it. It's a waste of time.I can't believe Craig McClanahan recommended this book. How much did Sams pay him to say that?",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            }
        ]
    },
    {
        "Title": "sams teach yourself tcltk in 24 hours teach yourself hours",
        "description": "Covers Tcl expressions, control structures, lists and arrays, widgets, using Tk with Perl and C, and creating user interfaces and Web applications with Tcl",
        "authors": "['Venkat V. S. S. Sastry', 'Lakshmi Sastry']",
        "infoLink": "http://books.google.com/books?id=iYdgPgAACAAJ&dq=Sams+Teach+Yourself+Tcl/Tk+in+24+Hours+(Teach+Yourself+--+Hours)&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "This book is great for the advanced user that just want to obtain some knowledge about the language or for the beginner that wants to learn an easy, multi-platform and internet-friendly language (easier than Java). *BUT* if you have other SAM'S &quot;Teach yourself (X language) in 24 hours&quot; you'll notice that this book seems to be more 'fast paced' than the others from SAM'S.",
                "review/helpfulness": "12/13",
                "num_reviews": 13
            },
            {
                "review/text": "A very good book to get you started programming in Tcl/TK and see some fast results. There is sufficient amount of detail to learn the basics. What I liked most is the way the examples are presented, you are encouraged to experiment and it is great and easy with Tcl/TK. At first I wanted to see more detailed coverage of the various options, but the book encourages you to use the Tcl help files and - a good habit to develop when you get into more serious programming. The Q&amp;A and excercises help quite a bit when you are learning on your own. I have been able to adopt a lot of their examples to a demo program for my work.",
                "review/helpfulness": "10/10",
                "num_reviews": 10
            },
            {
                "review/text": "I bought this book based upon online reviews and I was sorely disappointed with what I received. While the book does step you through the Tcl language it does not lend itself to acting as a reference book when you're trying to get a project done and need to look things up.If I could have done it over again, I would've gone with the O'Reilly book on the same topic.",
                "review/helpfulness": "5/7",
                "num_reviews": 7
            },
            {
                "review/text": "I started off with the Welch book but quickly realised that it was not for beginners and switched off to this one. I think for a quick ramp up this book is good enough but you definitely need another book to take you to the next level.A word of caution/Public service message: Listing 8.5 on page 133 has a wrong analysis. I would have loved to put this in a errata but it doesn't exist. Luckily the said error is about globs which many people don't use anyway.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "c precisely",
        "description": "This book presents an introduction to the C programming language, featuring a structured approach and aimed at professionals and students with some experience of high-level languages. Features *includes embedded summary material in bulleted form *highlights common traps and pitfalls in C programming.",
        "authors": "['Mike Banahan', 'Declan Brady', 'Mark Doran']",
        "infoLink": "http://books.google.com/books?id=XXdyQgAACAAJ&dq=C&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "Instant classic!This is THE best computer language book I have ever seen in my life!This book's achievement is unprecedented. Anders Hejlsberg used 432 pages to describe C#, Jesse Liberty spent 672 pages to achieve the same with better accessibility. Make a guess, what are the minimum pages to achieve the same goal? 182 pages!!! 182 pages achieved even higher level of accomplishment than 400-700 pages!You can't find any useless or meaningless word in this book. If a word is taken from the book, it's not complete. If a word is added, it's too much.I read the book as if I were reading a collection of beautiful poems, I almost forgot it's a computer book. The language is so fluid that you only feel perfection and harmony, the descriptions are so accurate that it reaches the level of precision as mathematics.After I finished reading, I noticed that the author lives in Copenhagen, Denmark. I am really astonished by his mastery of English the same as his mastery of C#.Another excellence of this book I'd like to mention is that:When the book is opened, the left hand pages give you high precision descriptions of C# constructs and logic, the examples are given on the right hand pages to support and clarify these concepts.Highly recommended, software engineers and computer scientists will be benefited from this book on multiple aspects.",
                "review/helpfulness": "12/12",
                "num_reviews": 12
            },
            {
                "review/text": "This book is incredibly concise and precise, as its name.The example is very concise, too, and \"get to the point\".The book's \"layout\" is also easy to read: the descriptions of the language are given on the left-hand page, and corresponding examples are show on the right-hand pages.Having this one on my desk, I will not buy any other books about C# language.I will give it more than five stars if I can.Note one thing: this book came early, there are minor fixes for C# 2.0 beta 2, you can find them on the book's Web site.",
                "review/helpfulness": "4/5",
                "num_reviews": 5
            },
            {
                "review/text": "A great reference to the C# language, and the fact that almost every (if not all) the left page has an english description of the features and the right page a code example of tha feature. This makes using this book as a reference awesome. Moreover, the examples are very simple and to the point. Excellent resource.",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "This book has the same style as Sestoft's companion text, \"Java Precisely\". Concise explanations, that are perhaps best suited to a programmer already experienced in other languages, but who now wants to learn C#.You can rapidly pick up the essence of computational coding in C# using the book. The major classes are well treated. Be aware however that for making widgets, you really should consult another text.",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "Dont hesitate to buy this, this is the BEST programming book I have ever seen. Its loaded with tons of info the keeps you reading. You wont get board with this because its not loaded with words that dont relate to anything like most books, its just 'to the point'. Everything is explained clearly and precisely with the excellent precise explanations on the left and perfect examples on the right. One thing I have noticed is the english can be confusing(commas in a place were it shouldnt be) but who cares. If your trying to learn C# this may not be a good place to start unless you know Java or a similar langugage. I have been looking for a book that explains the C# language without trying to teach me how to program and this is it. For those wanting to learn how to program or come from VB you need 3 books, a C# \"Primer\", this book, and a .NET Framework book (mabe Pro C# 2005 and the .NET Platform)Also, the errata is very small, the part on nullable types tells you that you could make a nullable nullable by saying int i?? but that was removed from C#, and something is wrong with IEnumerable&lt;T> ...",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            }
        ]
    },
    {
        "Title": "fusebox developing coldfusion applications",
        "description": "Developers face a constant struggle to launch projects on time and under budget, especially without pulling all-nighters. Fusebox helps ensure successful projects by providing a framework that serves as a base for applications. It's a standard process that makes projects more manageable and simplifies maintenance and requests for change during development. With this book, you'll learn to make ColdFusion applications reliably successful by following a standardized system. In addition, relying on the Fusebox framework to help plan and organize your ColdFusion code will allow you to write increasingly complex and specialized applications. Jeff Peters and Nat Papovich, both members of the Fusebox Council, share their extensive experience in this book. They'll teach you to use Fusebox with your ColdFusion applications and develop a set of best practices for managing web projects. Read this book if you want to eliminate frustrations and roadblocks in your projects, such as unmanageable complexity, wasteful redundancy of effort, time-consuming code maintenance, and slow development speed.",
        "authors": "['Jeff Peters', 'Nat Papovich']",
        "infoLink": "http://books.google.com/books?id=43L1AgHGRt4C&dq=Fusebox:+Developing+ColdFusion+Applications&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "Whether you want to learn about the intricacies of the Fusebox core files; or you want to understand how Fusebox can help you become a better ColdFusion developer, the book Fusebox: Developing ColdFusion Applications by Jeff Peters and Nat Papovich is well worth the read.This book covers the basics of the Fusebox framework and FLiP (Fusebox Lifecycle Process) methodology to the more advanced features of Fusebox such as nested circuits and layouts.Beginners will appreciate the authors' abilities to convey complex ideas through examples that relate to real-world development experiences. Through their examples, it is easy to see how using FLiP and Fusebox can ease and even eliminate the common pitfalls that developers go through when coding their applications.The book starts out by explaining why a framework and methodology are beneficial to creating successful applications, and will give the reader some insight into the relationship between the developer and the client. This is a recommended read for all managers.The expertise of the authors really shows in chapters 3 and 4 as they delve into the complexities of the Fusebox core files. This section may be overly complex for the Fusebox beginner, but is an insightful read for those who already have experience creating Fusebox applications. If you were ever curious about the functionality of the code that makes up the Fusebox core files, this section will give you greater understanding of how Fusebox works.Chapters 5-10 walk the reader through all of the parts that a developer is responsible for when creating a Fusebox application. The basics such as the fuses (ColdFusion templates) and XFA's (eXit FuseActions's or Triggers) are covered in chapters 5 and 6.Chapter 7 covers Fusedocs, a documentation standard developed by Hal Helms. Even if you are not going to adopt the Fusebox framework for application development, learning Fusedoc's is time well spent. The Fusedocs chapter is a great reference tool that should be kept near your keyboard as you learn the names and attributes of the elements that make up the documentation. Appendix C details the Fusedoc dtd for those interested in the nitty-gritty of how Fusedocs are structured.Chapters 8-10 detail the advanced features of Fusebox that make it such a powerful and useful framework. The chapter on nested circuits discusses how to set up an application to take advantage of the way in which circuits communicate with each other. With nesting comes inheritance, and nested layout which is the subject of Chapter 9.Nested layouts are one of the more difficult concepts for new Fusebox developers to grasp. The book walks step-by-step though the concept of nested layouts and shows code examples of how nested layouts could be applied to an application.Because nesting of both circuits and layouts can be difficult to put into practice, Chapter 10 looks at some of the issues that developers may encounter when utilizing these advanced features.Part 3 of this book goes into the details of the Fusebox Lifecycle Process (FLiP). Developers who are responsible for the initial requirements gathering and architecture of an application will find Part 3 a useful read. For project managers who have struggled with bringing an application from concept to completion, chapters 11-16 are an important read.The remaining chapters in Part 3 (17-19) describe some Fusebox best practices, and sum up why Fusebox is useful in a dialog between two of the characters introduced at the beginning of the bookFusebox: Developing ColdFusion Applications is very well written, and a must read for anyone interested in using Fusebox to develop ColdFusion based applications.",
                "review/helpfulness": "10/14",
                "num_reviews": 14
            },
            {
                "review/text": "This book goes from theory to nuts-and-bolts and back again on how to design, implement, use, manipulate, and manage code written in the Fusebox method. While I particularly like Wireframes and FLiP, my favorite Fusebox piece by far are FuseDocs.The book spends a fair amount of time explaining each piece of the Fusebox methodology and gives plenty of examples. There is a companion website, which is more than handy. The book is broken into two sections: coding and the life cycle of the code. Each section seems to have a bit different focus, and I imagine that the Life Cycle Process section is more immediately attractive to managers and independent developers. Yet I am glad to find both pieces here, juxtaposed. It keeps me from losing the forest for the trees in the coding section, and from getting too far removed from the actual work at hand in the FLiP section.According to the authors, Fusebox was developed for use by small teams with a theoretical manager somewhere. I can see how this methodology would bring focus to and demystify any application development. But I have to write that while teams might have been the target audience, contractors will come to love this. Fusebox and especially its FuseDoc element empower the novice contractor to tackle the Big Project that has been landed at long last and produce results without becoming overwhelmed. Far more importantly, though, it allows a developer familiar with FuseBox to speak a fluid language about time, task, and integration. As someone who finds herself after lunch looking over code written before breakfast and wondering what the heck I was trying to do, FuseDocs are a godsend.Fusebox methodology, while written for ColdFusion, isn't limited to the ColdFusion world. One could easily pick up any FuseDoc and translate it to PHP. This portability of the process renders the Fusebox methodology a staying power we haven't seen in a long time. And while extreme programming has much to recommend it, it doesn't result in a task-oriented product in the same way that Fusebox does. The Fusebox process seems to lend itself to real world applications, development and concerns in a way I haven't found in other methodologies. It also has the added bonus of becoming widely known, and could approach a standard for web-based application development.As a developer, I found the book well written as well, and one that addresses each area discretely. I personally read it form front to back, but the material seems to hold up to a piecemeal reading as well (this chapter, that section, or this reference). All this means that the Fusebox book will be kept close at hand and used often. Buy it, and don't be afraid to write in it, dog-ear it, and put flags where they make the most sense for you. I truly believe that use of the Fusebox methodology singly or by whole teams will result in programmers who get to spend more time doing what they love, and doing it in an environment they enjoy.",
                "review/helpfulness": "7/9",
                "num_reviews": 9
            },
            {
                "review/text": "Fusebox is on version 4 as of 8/2004. This book is for Fusebox 3 ONLY!Get a Fusebox 4 book if you are starting from scratch with FB4 as 3 and 4 are VERY different.I will let others discuss the quality of this book - it is mostly a moot point for someone wanting the full benefits of FB.",
                "review/helpfulness": "8/8",
                "num_reviews": 8
            },
            {
                "review/text": "I thought the book did a very good job explaining FuseBox, but it did get preachy sometimes. There was also too much &quot;story telling&quot; for me.I thought Discovering FuseBox by Helms was better because I like books that give me information without wasting my time.",
                "review/helpfulness": "4/6",
                "num_reviews": 6
            },
            {
                "review/text": "Jeff Peters and Nat Papovich have both been major forces in the development of Fusebox -- a methodology for developing web based applications in an efficient and organized fashion. While build and primarily used with ColdFusion, Fusebox can also be used with PHP or JSP code. [There is nothing available for ASP - arguably the most popular web scripting environment - due to limitations in the ASP language. ASP is unable to dynamically include files.]This book provides a good introduction to Fusebox 3, as well as the FLiP methodology. They spend the first 100 pages or so walking through every line of code that is executed to initiate a fuse request (the 300+ line core file, the support files, etc.), then get into details of how to write your own fuse code, and how it interacts with the FB3 files.They then spend a decent amount of time with FLiP -- the Fusebox Lifecycle Process. This I found less compelling, because much of FLiP is really oriented towards contract web site development. While some is applicable to the corporate environment in which I work, other parts really don't fit all that well. Nonetheless, I feel that Peters &amp; Papovich do a good job explaining the concepts behind FLiP, as well as the various software tools which are available now to support it. They provide quick demonstrations of wireframing &amp; prototyping tools, a visual mind mapping tool, and a tool to build fuse-level unit testing harnesses.I found I really liked the approach of this book -- diving right into the deep end of the pool and working through the core files line by line. I'd initially gotten into Fusebox about a year ago, learning it on my own from what was available online. A few months later, I was fortunate enough to have Hal Helms teach a class in my company. And I've been developing in Fusebox almost exclusively since then. Despite this, I'd never spent much time actually working my way through the core files. In doing so through this book, I still picked up some interesting tips and tricks, and got my eyes opened on just how some of the code actually worked.In short, I think I'll build better Fusebox apps with the info I gained from this book. Now, if I can just get myself to take the time to actually write up the Fusedocs... :-)",
                "review/helpfulness": "4/6",
                "num_reviews": 6
            },
            {
                "review/text": "If you are new to fusebox you will probably read this book cover to cover and step away knowing nothing of practical value. This book could be useful as a high level reference for an experienced fuseboxer but not much else.",
                "review/helpfulness": "4/6",
                "num_reviews": 6
            },
            {
                "review/text": "This is a well written and easy to read book, with a somewhat evangelical tone about Fusebox methodology for writing Web applications in ColdFusion. For those who don't know about Fusebox, or want to find in detail about what it is, it is excellent. For those who have used Fusebox in the past, it is a good reference for Version 3 of Fusebox, with all of the major concepts explained in clear, English prose, with not too much techno-jargon.Whether the book succeeds in convincing everyone that Fusebox is the way to go is, however, questionable. Evangelism usually succeeds when the message is simple, or the results easily obtainable. Fusebox methodology is not the panacea that its proponents would have us believe. Its learning curve is steep, its benefits limited to certain types of applications and to sizable teams of developers. This book seems to address itself mostly to them, and it will have a hard time converting those developers who toil alone or in small teams. It is to be commended though for trying.",
                "review/helpfulness": "3/4",
                "num_reviews": 4
            },
            {
                "review/text": "I agree with some of the other comments I've read on here and from co-workers -- the book covers the basics well but is too &quot;preachy&quot; when it comes to the &quot;FLiP&quot; development cycle. We have our own development process in-house and I really just wanted a solid reference book for FuseBox 3 in which I could quickly look up what I wanted.",
                "review/helpfulness": "2/3",
                "num_reviews": 3
            }
        ]
    },
    {
        "Title": "interactive web applications with tcltk",
        "description": "Tcl/Tk is a scripting language suited for accomplishing a variety of interactivity including information collection, security and encryption, game development, and task automation. This book introduces the Tcl/Tk language as a viable Web application development tool. It presents the fundamentals of programming with Tcl/Tk to equip the reader with applications that take advantage of the Internet environment. The CD-ROM contains a variety of examples and tools which allow the reader to either build on basic applications or use the lessons in the book to build a weblet from scratch.",
        "authors": "['Hattie Schroeder', 'Michael Doyle']",
        "infoLink": "http://books.google.com/books?id=uZ5sQgAACAAJ&dq=Interactive+Web+Applications+with+Tcl/Tk&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "Forget this book. Half of the book consists of a Tcl/Tk introduction, better explanations are found in other books. Tcl/Tk code builds the other half, and Tcl/Tk code examples are available for free on the net. The toolbox they use in their examples hides all the real information you would need to understand the examples. But that's not given.If you really want to learn about Tcl/Tk refer to the books of Brent Welch. There you will find a lot of examples and, in case you need more Tcl/Tk source code to learn something, look at the applications available (f.e. at Scriptics.com)",
                "review/helpfulness": "6/8",
                "num_reviews": 8
            },
            {
                "review/text": "I've read a lot of introductory computer books that have left me after reading with the question &quot;now what?&quot; This book definitely answers that question. The example of the pure Tcl PointCast clone was absolutly incredible! The Spynergy Toolkit library makes it surprisingly easy to put together these sorts of apps, without much fuss.",
                "review/helpfulness": "2/3",
                "num_reviews": 3
            },
            {
                "review/text": "I really liked the example code. It's nice for a change to see really useful example programs, instead of the usual enginerdish foobar stuff.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "professional javascript with dhtml asp cgi fesi netscape enterprise server windows script host liveconnect and java",
        "description": "Unleash the true power of JavaScript by mastering Object-Oriented programming principles and patterns About This Book Covering all the new Object-Oriented features introduced in ES6, this book shows you how to build large-scale web apps Build apps that promote scalability, maintainability, and reusability Learn popular Object-Oriented programming (OOP) principles and design patterns to build robust apps Implement Object-Oriented concepts in a wide range of front-end architectures Who This Book Is For This book is ideal for you if you are a JavaScript developers who wants to gain expertise in OOP with JavaScript to improve your web development skills and build professional quality web applications. What You Will Learn Master JavaScript's OOP features, including the one's provided by ES6 specification Identify and apply the most common design patterns such as Singleton, Factory, Observer, Model-View-Controller, and Mediator Patterns Understand the SOLID principles and their benefits Use the acquired OOP knowledge to build robust and maintainable code Design applications using a modular architecture based on SOLID principles In Detail ECMAScript 6 introduces several new Object-Oriented features that drastically change the way developers structure their projects. Web developers now have some advanced OOP functionality at their disposal to build large-scale applications in JavaScript. With this book, we'll provide you with a comprehensive overview of OOP principles in JavaScript and how they can be implemented to build sophisticated web applications. Kicking off with a subtle refresher on objects, we'll show you how easy it is to define objects with the new ES6 classes. From there, we'll fly you through some essential OOP principles, forming a base for you to get hands-on with encapsulation. You'll get to work with the different methods of inheritance and we'll show you how to avoid using inheritance with Duck Typing. From there, we'll move on to some advanced patterns for object creation and you'll get a strong idea of how to use interesting patterns to present data to users and to bind data. We'll use the famous promises to work with asynchronous processes and will give you some tips on how to organize your code effectively. You'll find out how to create robust code using SOLID principles and finally, we'll show you how to clearly define the goals of your application architecture to get better, smarter, and more effective coding. This book is your one-way ticket to becoming a JavaScript Jedi who can be counted on to deliver flexible and maintainable code. Style and approach This comprehensive guide on advanced OOP principles and patterns in JavaScript is packed with real-world use cases, and shows you how to implement advanced OOP features to build sophisticated web applications that promote scalability and reusability.",
        "authors": "['Andrea Chiarelli']",
        "infoLink": "https://play.google.com/store/books/details?id=MgFwDQAAQBAJ&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "I am your typical Web architect. Not really a pro, but knowledgeable enough to make me one of the best people in my company to work with consultants and do a certain amount of pre-visualization and early prototyping.My project is to get an Intranet/Extranet completed using either Microsoft or alternative products. I have to research and oversee (with others) implementation of both visual design and user functionality, for client (Intranet and Extranet clients) and server ends (including administrative tools).I know the tools I \"want\" to use and the strategy I want to take, but I need some hard facts and intermediate to advanced descriptions of implementations.This book has what I need.Facts. Loads of example scripts. Analysis of using Java and Javascript. Analysis of extending application functionality through standalone script interpreters. Security issues. Client issues (for all relevant browsers) Server issues (for all relevant servers).Awesome. Definitely the fruit of an enormous (there's that word again) amount of expertise and trial and error development.If you have a little bit of knowledge about Web technologies (graphics, databases, servers, browsers and plug-ins), and have some familiarity with programming principles (best if you've taken a programming course or studied on your own for a few months) this book will be the glue that ties it all together for you.Part reference guide, part bible, and all relevant.",
                "review/helpfulness": "76/81",
                "num_reviews": 81
            },
            {
                "review/text": "I came back here to get Harry Yeh's email to thank him for his recommendation of this book, but felt I had to respond to the anonymous reviewer's comments. This is by far and away the most definitive reference on any scripting technology I've ever come across! I'd recommend this book to anyone and everyone.Of course &quot;Clib.puts()&quot; isn't discussed on page 22. Use of the C library is discussed much later (as it should be). And as for the side effects of the Comma Operator, an example follows directly after it's mentioned!Its clear that the reviewer hasn't read the book. I've been reading this book for the past three weeks and have discovered and learnt more than I did in the previous 2 years.",
                "review/helpfulness": "23/23",
                "num_reviews": 23
            },
            {
                "review/text": "This Book and the O'Reily Book Javascript : The Definitive Guide are the best books for Javascript in my mind. This Book teaches you all the useful techniques, and I use the O'Reily as a reference. They have a really good section on the OOP with Javascript.If you are a beginner, this book is pretty good as well. This is definately a book you will pick up time and time again! For the professional Web Developer, this book will teach you techniques that you would have had to scour the internet to figure out. There aren't that many Javascript books out there that were really good in my mind but this is definately one of the best! Like other Wrox books, You DEFINATELY CAN'T JUDGE A BOOK BY ITS COVER!",
                "review/helpfulness": "16/20",
                "num_reviews": 20
            },
            {
                "review/text": "As a web developer, I've been using this book for the better part of a year now. That, coupled with the fact that it's getting a little worn, should be a testament to its overall usefulness. I haven't yet found a professional application for the advanced material presented -- I mainly work in DHTML -- but I like knowing that if I had to do server-side JavaScript, for instance, I could.However, the reference chapters -- always the most important part of a computer text -- are fairly useless. The IE DOM is hardly explained -- it could warrant a book of its own, but this book's sketchy outline is useless. The way the appendixes are laid out is inconsistent and not visual enough -- you have to dig for the information you need (for instance, which browser supports which core object).Finally, and worst of all, the methods reference doesn't give you any clue as to the parameters of the methods! I often find myself looking up the object description here, then going to MSDN to se what the parameters are. How silly.3 of 5, because it *could* have been truly the only JavaScript book any serious programmer needs. As is, I'm off to the store to finally get a decent reference book. (Problem there is that all of them pre-date IE5. Where's the update, O'Reilly?)",
                "review/helpfulness": "14/17",
                "num_reviews": 17
            },
            {
                "review/text": "I am your typical Web architect. Not really a pro, but knowledgeable enough to make me one of the best people in my company to work with consultants and do a certain amount of pre-visualization and early prototyping. My project is to get an Intranet/Extranet completed using either Microsoft or alternative products. I have to research and oversee (with others) implementation of both visual design and user functionality, for client (Intranet and Extranet clients) and server ends (including administrative tools).I know the tools I \"want\" to use and the strategy I want to take, but I need some hard facts and intermediate to advanced descriptions of implementations.This book has what I need.Facts. Loads of example scripts. Analysis of using Java and Javascript. Analysis of extending application functionality through standalone script interpreters. Security issues. Client issues (for all relevant browsers) Server issues (for all relevant servers).Awesome. Definitely the fruit of an enormous (there's that word again) amount of expertise and trial and error development.If you have a little bit of knowledge about Web technologies (graphics, databases, servers, browsers and plug-ins), and have some familiarity with programming principles (best if you've taken a programming course or studied on your own for a few months) this book will be the glue that ties it all together for you.Part reference guide, part bible, and all relevant.",
                "review/helpfulness": "14/16",
                "num_reviews": 16
            },
            {
                "review/text": "I've got a real problem with this traditional-computer science approach of learning all about variables and structure but nothing that you can actually use.I had to actually RETURN this book, because it was such a waste. Little examples or real code, make it only good in &quot;theory&quot; and not in practice. You can do MUCH better.Look, books don't seem to be doing a very good job. If you want to learn Javascript, goto Yahoo.com and search for Javascript tutorial. I've just tried a few, but in an hour or two I've learned 20x as much as trying to read the book.",
                "review/helpfulness": "8/12",
                "num_reviews": 12
            },
            {
                "review/text": "Chapters 10 and 14 in this book are excellant case studies. The 'Family Tree Photo Album' is a great real-life example of how to use JavaScript practically and ties up what has been taught in the book.But then chapter 14 which is &quot;Building an e-commerce shop front&quot; goes beyond that to create a functioning online shop. It's brilliant! I have &quot;borrowed&quot; it for our company site.Thanks Wrox, this book surpasses even ASP2.0 in quality and depth. Keep up the good work.",
                "review/helpfulness": "11/11",
                "num_reviews": 11
            },
            {
                "review/text": "It's basically trying to put JavaScript everywhere without any details or real-life actions.All exemples are very briefly explained and have provides NO BONUSES to anyone that have at least a small experience of JavaScript.My goal when purchasing this book was to learn new tricks with JavaScript since I'm coming from VB and VBScript so I wanted to learn the special things about JavaScript. LOOK ELSEWHERE IN THAT CASE.BUT, if you are looking at WHAT IS JAVASCRIPT AND WHERE CAN I USE IT? it might be an 'okay' start.",
                "review/helpfulness": "8/10",
                "num_reviews": 10
            },
            {
                "review/text": "Professional JavaScript is great as a reference and one can find some good nuggets in some of the non-reference chapters. However, if you do not already have formal programming training, and possibly some good familiarity with JavaScript itself, the book may do you better just as a reference tool. Also, because it was written by so many people (each one responsible for a different chapter) the text reads more like a disjointed collection of essays.The first 750 pages or so of the book comprises the main content of the book. It is divided into 20 chapters, covering just about every aspect of the language. Some of the more advanced chapters, which I did not get a chance to read, are integrating JavaScript with Java, Server-side JavaScript, and stand-alone JavaScript via Windows Script Host. There are also chapters on integrating JavaScript with ASP, and detailed looks at a couple of fairly complex JavaScript systems including a family tree and an ecommerce tool. The problem is that there's little ramp-up. There are lots of code examples throughout the text, but they are primarily small snippets. So it's like shock therapy when you are presented with such major applications of coding without anything in between! But this has to do more with the aforementioned nature of the book in that so many different authors with different styles and topics wrote it. Some of the chapters are great; they have some really good information that any level of programmer can use. The chapters on Forms and Data, Multimedia Plugins, Debugging and Disappearing Data, and Windows and Frames were all extremely helpful. Other chapters for me were completely useless to me - they droned on and on about theoretical issues without getting into practically any coding. I had great hopes for the chapter on Privacy, Security and Cookies, as well as the one on Rapid Application Development, but neither was helpful at all.The last 300 pages or so comprises the reference section. The reference section is great, it goes into every aspect of the language, including the core language attributes, objects and methods, and there are a ton of JavaScript/browser comparison charts that give you a great idea of what functions and features will be available to you in Netscape and IE from the earliest version to the latest.Ultimately what you get out Professional JavaScript really depends on your level of expertise when it comes to programming. I do not personally have any formal training - it's all been self-taught, so some of the more advanced stuff, though I'm sure I could learn it given the need, was not presented in a way that instructs people who do not have a familiarity with advanced programming techniques. There seems to be a lingo that some programmers use when talking about programming and for people who don't have formal programming training (or haven't been programming since they were nine) is just completely baffling. Most O'Reilly books seem to be full of this, but then they are written for the professional programmer. Professional JavaScript, as the name implies, probably is as well, however, there is enough great information here for any kind of programmer, and you just have to be selective as to which chapters you try to tackle.",
                "review/helpfulness": "8/10",
                "num_reviews": 10
            },
            {
                "review/text": "I started learning Javascript with the O'Reilly book 'Javascript' (the one with the rhino). It was a good intro, but left me hungry for more.Enter 'Professional Javascript' from Wrox. From the sample chapter at www.wrox.com I knew this was going to be a great book. I definately helps to be already familiar with Javascript. The basics and syntax are covered in a single chapter. The authors reveal huge amounts of information in a tight, well-constructed format that enlightened me in a very efficient manner. I cannot believe how much I've learnt from this book.The best thing about this book is that they don't consider Javascript to be a 'toy' suitable only for building flash into web pages. This attitude is best expressed in the chapters on browser configuration using Javascripts and server-side Javascript.The only criticisms I have are the poor reference section (what's the point of telling me the String object has a substr method if you don't also tell me the parameters?) and the constant references to 'magic' processes -- that's condescending.The O'Reilly book 'Javascript' has an excellent reference section. The Wrox guys should really take a look at it.However, I'm prepared to overlook these minor flaws. This isn't a reference book -- it's a darn good technical manual with succinct examples and a good balance between praise and criticism of the major browsers.If you want to take Javascript beyond flashy animations and build real applications you need this book.",
                "review/helpfulness": "7/9",
                "num_reviews": 9
            }
        ]
    },
    {
        "Title": "professional palm os programming wrox professional guides",
        "description": "Professional Palm OS Programming is everything programmers need to create applications for the world s most popular operating system for handheld devices. Veteran Palm developer Lonnon Foster, who has been developing commercial applications for the platform since its introduction nearly a decade ago, provides readers with hands-on instruction, lots of code, and advice that only comes from the trenches giving readers everything they need to build cutting edge applications and take advantage of the features of both Garnet and Cobalt. Coverage includes: Building forms, menus and user interfaces Managing memory Tying into Palm s standard applications such as the Calendar, Phonebook, or Tasks Storing program data on removable storage cards Building network enabled applications Creating web applications for Palm Working with Palm OS new support for Web Services Programm ing for new device features such as jog dials, rocker switches, 5-way navigators Working with sounds, graphics, multimedia, and new high-resolution color screens Encrypting and decrypting data Wi-Fi, Bluetooth and wireless networking and more",
        "authors": "['Lonnon R. Foster', 'Glenn Bachmann']",
        "infoLink": "http://books.google.nl/books?id=h0chEt_6LtoC&dq=Professional+Palm+OS+Programming+(Wrox+Professional+Guides)&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "This book would be better if it was re-organized. By chapter 4 you are entering a program, but you can't run it until after several more chapters, as creating resource files isn't discussed until chapter 6. Without the resource files (icons, form definition, etc.) the program can't run. Sort of disappointing after typing in all that code.The books web site includes complete code for those using either CodeWarrior 8 or 9, but if you are using PODS you are out of luck. It discusses PODS, but as something of an after thought. The PODS documentation will serve you far better.I also hope you are already familiar with C/C++ programming.All the information to program for Palm OS appears to be here, but you will have to hunt around for it and be familiar with what you are doing.Definitely not a raw beginner's guide.",
                "review/helpfulness": "5/5",
                "num_reviews": 5
            },
            {
                "review/text": "I found this to be the only Palm Programming book available when I was attempting to learn to program my Palm. It certainly takes a bit of disassembling to figure out how the nuts and bolts work but it is actually a decent book.As previously mentioned, there seems to be a lack of info about the PODS compiler because most all of the samples are written for codewarrior. I found this to be a bit frustrating because I spent a lot of time reworking the resource files to make the samples work.Other than that, I would say the book covers quite a bit of material and is certainly ample for an intermediate programmer (with some C/C++ experience). If you are using the free Palm Developer Suite (PODS) just know that you will have to do a bit of reading on your own (reading Palm documentation) to figure out how to make things work.I'd like to see more samples.. perhaps I'll write a few myself and start a website to help other novices like me learn the basics.",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            }
        ]
    },
    {
        "Title": "get in the groove building tools and peertopeer solutions with the groove platform",
        "description": "\"Phil Stanhope delivers what I consider to be a recipe-based approach to building tools and applications for the Groove decentralized communications platform. Phil isn't just a short-order cook; he's a master chef.\" -Jack Ozzie, Vice President of Development, Platform and Development Services, Groove Networks, Inc. Building Tools and Peer-to-Peer Solutions with the Groove(r) Platform The Groove platform makes peer-to-peer workgroup collaboration easier than ever. With this unique developer's guide, you'll discover how to customize Groove for specific business needs - taking Groove collaboration and ease of use to the next level. Using plenty of code examples in JavaScript, C++, and Visual Basic, veteran Groove developer Phil Stanhope shows you step by step how to create your own Groove tools and layouts and integrate contact management, Web-based customer management services, and data from enterprise systems. Take Groove(r) to the Next Level * Understand Groove basics - the transceiver, contacts, messaging, chatting, spaces, and accounts * Create, test, and refine custom HTML viewer tools to integrate existing Web content into Groove * Streamline development by extracting template code from existing tools * Create your own custom Groove layout * Integrate contact management with invitation files and online detection tools * Enhance a customer-service Web site by adding a Groove collaboration space with seeded customer data and tools * Understand the basics of next-generation edge-based CRM applications by synchronizing center-based enterprise data with custom edge-based tools * Import and export Groove-specific XML as well as third-party XML data from corporate databases and Web-enabled CRM and ERP systems * Exploit Groove's communications, security, and transport services to build asynchronous, guaranteed-delivery message and data-synchronization solutions CD-ROM includes: * Sample Groove tools * Complete source code and examples from the book * Groove Preview Edition and Groove Development Kit",
        "authors": "['Phil Stanhope']",
        "infoLink": "http://books.google.nl/books?id=aYYLuM5IV9kC&dq=Get+in+the+Groove:+Building+Tools+and+Peer-to-Peer+Solutions+with+the+Groove+Platform&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "Packed with very useful information and examples for the developer. It hits the ground running - just pure code that gets you up &amp; developing in no time. Lucid text, content &amp; layout, tips &amp; cautions, tools and sample code on CD-ROM - a great way to start developing for the Groove platform. I am eagerly awaiting the sequel to this book - developing for Groove with C#/.Net ;)",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "To many people, p2p software and networks are synonymous with unauthorised copying of music or video. Hence all the to-do about Kazaa, Gnutella and BitTorrent. But along comes Stanhope with his explanation of what you can do with Groove, to put a different spin on matters.He shows how you can use Groove as a framework for ad hoc groupware, for a set of users scattered over the Internet. Prior to the Web, the concept of groupware certainly existed in the 1980s. Groove is a natural extension of those ideas. Plus others that have also proved fruitful. Like using XML to encode configuration settings. And Groove supports several programming languages, like C++, Visual Basic and C#. Alas, no Java at this point.The book can be intense. The author assumes you are already experienced in one of those languages. He dives in quickly into the gritty details of coding. Which is probably what you need.Stanhope deserves credit for helping show that p2p can be used for valid and serious purposes.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "sams teach yourself active server pages 20 in 21 days teach yourself series",
        "description": "A guide to ASP and IIS fundamentals covers dynamic content, interactivity, writing files on the Web server, personalizing content, reading databases, and debugging scripts",
        "authors": "['Scott Mitchell', 'James Atkinson']",
        "infoLink": "http://books.google.com/books?id=U-S0n2tLJa8C&dq=Sams+Teach+Yourself+Active+Server+Pages+2.0+in+21+Days+(Teach+Yourself+Series)&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "The book assumes that you can access a server that can execute ASP. I used Personal Web Server that ships with VB 6.0 on Windows 98. I typed in several of the examples in the first few chapters and all of the code works and is complete. I also downloaded all of the source code from this site. I set up the odbc connections as shown and the code from ch10,11, and 12 is flawless. I haven't completed the other chapters yet. The author illustrates the frontpage editor to build forms which will save a lot of programming time on real projects. I used frontpage express(the cut down version of frontpage) and it generates the same Java code found in the authors examples. I appreciate the use of real world examples as opposed to meaningless snippets of code in countless other books.I would like to thank the author for this terrific book.",
                "review/helpfulness": "5/6",
                "num_reviews": 6
            },
            {
                "review/text": "Well organized, wide coverage, starts from grass root, good for the beginners. Touches many subjects, but not enough explination. Still a very good book.",
                "review/helpfulness": "2/3",
                "num_reviews": 3
            }
        ]
    },
    {
        "Title": "eclipse aspectj aspectoriented programming with aspectj and the eclipse aspectj development tools",
        "description": "The definitive (and only) introduction to Aspect-Oriented Programming (AOP) using Eclipse and ASpectJ.",
        "authors": "['Adrian Colyer']",
        "infoLink": "http://books.google.com/books?id=uIZ9QgAACAAJ&dq=Eclipse+AspectJ:+Aspect-Oriented+Programming+with+AspectJ+and+the+Eclipse+AspectJ+Development+Tools&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "In Part 1, \"Introducing Eclipse, AspectJ and AJDT\", we are led through the building of a prototype insurance application (SimpleInsurance). Along the way, we are introduced to Eclipse, the AspectJ language and the AspectJ Development Tools (AJDT). The aspects are not presented as pre-built, but we get to see how they are selected, written, refactored and, even debugged. I found the discussion interesting, and saw new ways to use the tooling to prevent problems, but it did mean that even simple features went through a lot of hoops which were not always clear at the time. Thrown into the mix were a number of side-bars which explained the development philosophy and architecture behind AspectJ to a depth that I have only glimpsed in some of the mailing list discussions. I am using AspectJ and some of these sidebars took me several minutes to digest. I don't like to think about how a genuine newcomer would react. Thrown into the mix were screen captures of simple wizards and instructions on how to save files, making for some unintentionally funny contrasts.In Part 2, \"The AspectJ Language\", things calm down as we go back to the beginning and cover the AspectJ language in full detail. As one would expect, they have produced the clearest and most comprehensive overview of the language I have seen. Everything is explained, generally using code snippets and object-interaction diagrams to reinforce their points. For complex issues, there are a number of sidebars which delve into the design of AspectJ. I learned many new things, not only about AspectJ but about the Java language itself.Finally, in Part 3, \"Putting it All Together\", we are able to get into the \"meat\" of AOP and discuss how to develop our own AO application. We get to see how to adopt AspectJ, how to develop with aspects, and how to design applications with AO. Armed with a richer understanding of AspectJ, we take a look back at the insurance application that we worked on in Part 1 and see what benefits we've achieved. We briefly revisit the discussion about integrating AspectJ with Hibernate, and get to see how we would use Spring to improve our solution even further. There is great stuff here, but my only problem with this section is that there is just too much material to cover in the 100 pages it gets. As they say, a whole book could be written on this topic (any takers?).I couldn't help comparing this book to \"AspectJ In Action\", though the two are quite different in many ways. \"Eclipse AspectJ\" definitely contains the most in-depth information about AspectJ and the AJDT. Using the same example (the SimpleInsurance application) throughout meant that we can see AspectJ being used in many different parts of development. There are many aspects in \"Eclipse AspectJ\" which I am keen to use in my applications. The problem is that I'm still debating with colleagues at work if I *should*. Where \"AspectJ In Action\" spent some time explaining different patterns and showing where different aspects should be used and where they should not, \"Eclipse AspectJ\" presents the tools but leaves the rest up to us. To my mind, that is the most important difference between the two. While \"Eclipse AspectJ\" cannot be matched for sheer depth, it does not always provide enough context to be used by new AspectJ developers. It is a good resource for existing AspectJ developers and will give you a complete understanding of the language and the tooling, but will be standing beside \"AspectJ In Action\" on my bookshelf.",
                "review/helpfulness": "32/32",
                "num_reviews": 32
            },
            {
                "review/text": "Since my last attempt to get a book to learn about AspectJ wasn't very productive, I decided to try again with Eclipse AspectJ: Aspect-Oriented Programming with AspectJ and the Eclipse AspectJ Development Tools by Adrian Colyer, Andy Clement, George Harley, and Matthew Webster. *Much*, much better...Content:Part 1 - Introducing Eclipse, AspectJ, and AJDT: Getting Started; First Steps in AJDT; Extending The Application; More AJDTPart 2 - The AspectJ Language: An Overview Of AspectJ; Straight To The Point; Take My Advice; Inter-Type Declarations; Aspects; Using The AspectJ APIPart 3 - Putting It All Together: Adopting AspectJ; Advanced AJDT; Aspect-Oriented Design; Command-Line AspectJ; AspectJ Language Quick Reference; Next Steps; AJDT Icons Reference; IndexTo give you an idea of how much better I liked this book... I learned more in the preface than I knew after going through the other book I reviewed. :-)There's a lot to like about how this book is done. Part 2 - the coverage of the actual language - is more than adequate to give you the reference material you need in order to learn the language. With each concept like pointcuts and advice, you get a tutorial of the feature, examples of how it actually works, as well as reference material for the methods and properties it uses. There's probably enough here to get you quite far down the learning path. But coupled with parts 1 & 3, it's more than enough to get you fully competent in the language. Part 1 gives you plenty of knowledge and grounding in how to use Eclipse to start coding an AspectJ application. They have a nice example of an insurance application that helps bring the theory into practice. Part 3 was a nice touch, too. Since AspectJ is designed to work *with* your object-oriented applications, this section helps you plan out how you can actually start applying the new skills in your environment. Since aspect-oriented programming (AOP) hasn't yet achieved any critical mass, there's little chance you'll be able to apply it in an all-out fashion. But using the material in part 3, you'll be able to plan out some pilots and situations where you can get your feet wet. Very cool...Even as a way to get a high-level understanding of AOP, this book works very well. To take the next step from high-level understanding to competency, you'll have everything you need right here. I'd definitely recommend this book for anyone wanting to delve into this area...",
                "review/helpfulness": "12/14",
                "num_reviews": 14
            },
            {
                "review/text": "I found the concepts of AspectJ cool but the book seems choppy and too complex to follow. The Eclipse AspectJ tools seem very complicated and busy on the screen. The book could have had a better flow and a lighter introduction. Possibly starting out as a \"language\" book versus a tool book.",
                "review/helpfulness": "6/8",
                "num_reviews": 8
            }
        ]
    },
    {
        "Title": "web programming unleashed with cdrom",
        "description": "ActiveX controls, full-featured components, are the building blocks for creating active content on Web pages. This book covers ActiveX controls, ActiveX documents, Internet Server API, high and low level interfaces for downloading data from the Internet, and more. The CD includes various tools, demos and code examples.",
        "authors": "['Weiying Chen']",
        "infoLink": "http://books.google.nl/books?id=IOF6QgAACAAJ&dq=Web+Programming+Unleashed+with+CDROM&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "I found this book to be very very informative and a great learning tool! the major exception to this is Chapter 8 which is absolutely PITIFUL! this book is written by several authors, each with their own style. The author of Chapter 8 spends more time telling you what he is not going to teach you than actually teaching anything! Chapter 8 is &quot;Java Programming,&quot; do not buy this book for that. This book is truly great for any other Web-related programming/design topic, though. I still believe this book is a definite must-buy, just do not count on a very thorough understanding of Java without an additional resource.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            },
            {
                "review/text": "This book really doesn't give you imformation about any kind of web programming. It barely skims the surface of all the languages or scripting languages the book says it covers. A real waste of time.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "professional vb sap r3 programming",
        "description": "For more than 40 years, Computerworld has been the leading source of technology news and information for IT influencers worldwide. Computerworld's award-winning Web site (Computerworld.com), twice-monthly publication, focused conference series and custom research form the hub of the world's largest global IT media network.",
        "authors": NaN,
        "infoLink": "http://books.google.com/books?id=ImUZe5dykQcC&dq=Professional+VB+SAP+R/3+Programming&hl=&source=gbs_api",
        "categories": NaN,
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "Details with examples. Good for all SAP R/3 tools and application developers. Explains BAPIs, RFCs, bussiness object repository (BOR), SAP DCOM Connector component etc.",
                "review/helpfulness": "21/21",
                "num_reviews": 21
            },
            {
                "review/text": "I'm not a VB programmer. I obtained this book to better understand how BAPI's worked and could interface with external applications based on a project team demand to develop better masterdata loaders. The first three chapters alone are goldmines of information that are neatly tied together and explain the concepts and framework used. After reading them I understood why SAP went this route and better understood some of the potential areas where BAPI's could assist our development team. The latter chapters get into more VB oriented issues but are useful regardless of VB experience (or lack thereof). Our VB developers all own this book.",
                "review/helpfulness": "8/8",
                "num_reviews": 8
            },
            {
                "review/text": "\"Professional VB SAP R/3 Programming\" - demonstrates how to combine existing Visual Basic tools with the new extensibility tools, so that you can develop robust enterprise applications based on SAP R/3 from a non-SAP programming environment. It also explains the fundamentals of SAP, including the new SAP tools and technologies. SAP R/3 business objects and BAPIs are implemented and a guide to the SAP Business Framework is illustrated. The SAP R/3 Automation tools are used to replicate SAP functionality from VB and the DCOM Component Connector is used to generate business object proxies, aswell as programming the core components of the DCOM Component Connector. Browsing the SAP R/3 Business Object Repository is demonstrated and working code samples of both inbound and outbound SAP R/3 operations are included...",
                "review/helpfulness": "3/4",
                "num_reviews": 4
            }
        ]
    },
    {
        "Title": "jabber programming mt books",
        "description": "Jabber is a set of protocols expressed in XML, and an extensible framework that allows people and applications to exchange all sorts of information, from simple text messages to being used to extend the backbone of an enterprise data system. Jabber gives you the power to build applications that have identity, presence, and that can take part in conversations.Programming Jabber offers developers a chance to learn and understand the Jabber technology and protocol from an implementer's point of view. Detailed information of each part of the Jabber protocol is introduced, explained, and discussed in the form of mini-projects, or simple and extended examples. Programming Jabber provides this foundation by: Showing you how to install and configure the Jabber server Providing a detailed overview of the server architecture and configuration options Covering the core Jabber technologies such as XML streams and Jabber identifiers Referencing all of Jabber's XML namespaces Examining the client registration and authentication phases Showing how to deploy your own Jabber-based messaging solutions Demonstrating how to embed XML-RPC-style call mechanisms into Jabber Programming Jabber is divided into two parts. The first part serves as an introduction to Jabber; you'll learn about its features, why it's more than an IM system, and how to install and configure a Jabber server of your own. The second part provides detailed information about the Jabber protocol, and a series of practical examples, which can be used to solve everyday problems. The examples, in Perl, Python, and Java, use various Jabber features as a way of illustrating parts of the protocol.Programming Jabber provides the foundation and framework for developers to hit the ground running, and is the essential book on Jabber.",
        "authors": "['DJ Adams']",
        "infoLink": "https://play.google.com/store/books/details?id=tvh31VkWERUC&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "Please do not be fooled by title. Less then 1/3 of the book covers Jabber programming itself. Most of book is about ... how to configure Jabber client authors developed (actually about 1/3 of book). Language is very primitive. Development environment is VB 6.0. Absolutely useless book.",
                "review/helpfulness": "32/33",
                "num_reviews": 33
            },
            {
                "review/text": "First of all, the title here is misleading. There are some snippets walking the reader through Visual Basic code, but the concepts and protocols (JEPs, XMPP, etc.) are noticeably absent. I honestly was able to read the book in a couple of hours (nothing challenging or meaty here) and found it a waste of my time. If you are having trouble installing Jabber clients, this may be a useful resource since the real focus of the book seems to be this very topic. However, the information included is also dated. Here is my recommendation: if you are looking for a decent Jabber book, start with the O'Reilly one.",
                "review/helpfulness": "20/21",
                "num_reviews": 21
            }
        ]
    },
    {
        "Title": "enterprise messaging using jms and ibm websphere",
        "description": "& -> Details the JMS API, covering the latest version 1.1, and discusses application development based on IBM WebSphere implementations & & -> Key coverage on WebSphere MQ, Websphere MQ Event Broker, JMS administration tasks, and common usage scenarios & & -> Examples coding JMS in servlets, portlets, EJBs and communicating with non-JMS applications",
        "authors": "['Kareem Yusuf']",
        "infoLink": "http://books.google.com/books?id=mJ-fT9mVaLYC&dq=Enterprise+Messaging+Using+JMS+and+IBM+WebSphere&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 2.0,
        "review": [
            {
                "review/text": "Java Messaging System arises out of the need to have loosely coupled objects associated in a J2EE architecture be able to communicate asynchronously with each other. In part because these objects might be physically quite distant from each other, like an application client and a web container that are both on the Internet. The objects may have variable loads and so the buffering of messages is preferable if any object is too busy to attend to an incoming message. Plus, objects may have intermittent connectivity to the net. Especially if mobile/nomadic computing takes off.In any of these scenarios, IBM sees a need for a web server, mediating between applications and a large database (DB2 in IBM's case). That server or container is WebSphere. The bulk of the book therefore deals with how WebSphere implements JMS. The book makes explicitly clear that IBM's implementation fully satisfies the JMS versions 1.02b and 1.1 APIs. Which means that a third party client application that can handle these versions can send and receive messages to WebSphere via JMS. You can consider this as an extra enabling inducement for independent software vendors to write code that hooks to WebSphere.Various examples are given; the book terms these JMS scenarios. Most importantly is how to use Enterprise Java Beans to swap messages via JMS. For commercial applications, another example shows the ability to encrypt the messages.Now hopefully, ISVs will partake of the book's offerings.",
                "review/helpfulness": "8/9",
                "num_reviews": 9
            },
            {
                "review/text": "I've been working with WebSphere for over 5 years (since the beginning) and this was still worth reading. Great book full of examples, step-by-step \"labs\". This is focused on WebSphere and MQ, but will be very helpful to those who wants to use MQ with any other J2EE server. If you are not MQ and not WebSphere user - this still will be helpful since it has great deal of JMS basics, but you will have to use your vendor's tutorials and examples instead of those in the book. Concepts are still the same.",
                "review/helpfulness": "5/5",
                "num_reviews": 5
            },
            {
                "review/text": "Dr Yusuf has done a great job in pulling together many areas of technology into a comprehensive work addressing JMS as well as the role of messaging in a WebSphere/WAS environment. I have been working with WAS as well as WebSphere MQ for a number of years and this book is a must buy for developers looking to integrate applications with JMS or exploring/developing with the messaging features of WAS. Well done!!!",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "This book makes the process of learning JMS easy for all skill levels. Dr. Yusuf provides real-world examples in a language that is down to earth. He has assembled its content into sections for someone just learning JMS while providing code samples for the seasoned developer. I found the \"how to\" diagrams extremely helpful when configuring Enterprise JMS in WebSphere. This is a must have for anyone interested in JMS and how it's applied in an IBM WebSphere environment. This is an excellent book!",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            },
            {
                "review/text": "This book delivers information that could only be previously pieced together from various presentations, manuals, IBM DeveloperWorks articles, J2EE specifications and web searches in a single, easy to read book. I don't hesitate in recommending it to anyone who is developing or supporting JMS-enabled applications with WebSphere.",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            },
            {
                "review/text": "I found this book extremely useful. It is practical, well-written and provides the necessary ancillary information required to understand the topics. The author builds up nicely from messaging, to JMS basics, advanced JMS topics, IBM JMS offerings, hands-on scenarios(which bring it all together, especially for people who learn by doing), and deployment. In addition, throughout the book, the author provides implementation considerations, recommendations and best practices, which will be of great value to designers and developers alike.",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            }
        ]
    },
    {
        "Title": "professional php5 programmer to programmer",
        "description": "What is this book about? With the release of PHP 5 and the Zend Engine 2, PHP finally graduates from it earliest days as a lightweight scripting syntax to an powerful object oriented programming language that can hold its own against the Java and .NET architectures that currently dominate corporate software development. This book has a pragmatic focus on how to use PHP in the larger scheme of enterprise-class software development. What does this book cover? Unlike Java or .NET, there is little discussion of the application of design patterns, component architectures, and best-practices to the development of applications using PHP. Software written in the absence of this sort of higher-order architecture will never be able to match the robust frameworks that Java and .NET ship with out of the box. This book addresses this issue by covering the following material: Part 1 discusses the OO concepts that were initially explored in Beginning PHP 5 and a demonstration of how to implement them in PHP 5. This section also covers UML modeling and provides a brief introduction to project management techniques that are covered in more depth in Part 4. Parts 2 and 3 present objects and object hierarchies that, when completed, comprise a robust toolkit that developers will be able to reuse on future projects. These chapters are designed to arm the professional PHP developer with the sort of constructs that are available out of the box with platforms such as Java and .NET - from simple utility classes like Collection and Iterator, to more complex constructs like Model/View/Controller architectures and state machines. Part 4 shows how to use the toolkit from Parts 2 and 3 to create real-world applications. We look at the development of a robust contact management system that will leverage the componentry and concepts already discussed and introduce project management and software architecture concepts that enable developers to accurately identify business requirements, design scalable, extensible platforms, and handle change management effectively. It covers the waterfall and spiral project management paradigms and include a discussion on eXtreme Programming and other approaches to software development. The Appendices include an extended discussion on the effective use of CVS, introduce the Zend Studio IDE and related tools, and discuss performance tuning and scalability.",
        "authors": "['Ed Lecky-Thompson', 'Heow Eide-Goodman', 'Steven D. Nowicki', 'Alec Cove']",
        "infoLink": "http://books.google.nl/books?id=DQRBMWN_VJ0C&dq=Professional+PHP5+(Programmer+to+Programmer)&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "OK, first off, I'll be totally honest - I am the lead author of this book. So, of course, I'm going to give it five stars.But, I really do have to rebut the review of the above reader.He's right - there's very little PHP 5 'specific' information on this book. This is a book for people with a solid grounding in PHP already. I can't stress that enough. If you don't know PHP inside and out, this book is not for you. If all you want to know is the differences between PHP 4 and 5, this book is not for you (to be honest, there's a web page on zend.com that tells you the differences in just a few pages).If, however, you want to see how you can take your PHP development to a far higher tier than your peers, then this is the book for you. No other book treats PHP like a professional development language. Every other title insists on propagating appalling development practices, practices which are in part responsible for the majority of PHP on the web today looking like it was penned by a 13-year old in his bedroom.Not this book. This is a book for professionals - either existing professionals seasoned in Java/JSP, C++ or some other 'traditional' programming language who is looking for how they can apply the 'best practice' techniques they've already learnt to PHP - or, for aspiring PHP professionals who have a solid grounding in and understanding of PHP 4 or 5 already.Put it like this - I run a web agency. I am interviewing PHP people right now. Their code is truly appalling, universally, but I'm going to hire one of them. The one condition of their employment? That they read this book cover to cover before they start with us.Hopefully this gives you a bit of an insight into what this book is about. If you're looking for a gentler introduction to PHP 5, take a look at Beginning PHP 5, also by Wrox (to which I also contributed). If you're ready to become a respected industry professional, take a look at this book.",
                "review/helpfulness": "35/40",
                "num_reviews": 40
            },
            {
                "review/text": "First, visit wrox dot com and download the sample code that is available for free on their site.If you think you want this book, you probably already have php5/Apache/mySQL installed on your development workstation.Unzip the sample code, browse it using your favorite IDE. Note the usage of PostgreSQL instead of MySQL. Take a shot at executing the very simple OO sample files in the first chapter. Notice the syntax errors, the use of depracated functions, and errors in filenaming.This book was rushed through development, much like most poorly developed applications. Very much a shame. I bought the book based off of previous Amazon reviews but failed to visit the user forum on the wrox site.You'll notice there that the topic of greatest interest for this book is that of disappointment in it's development. In print for most of this year and not a single errata to correct the carelessness of the authors' inattention to detail.0 stars for typos.0 stars for poor sample code.0 stars for the editors.1 star for providing great general reference in the non-code oriented chapters.1 star for giving me the chance to fix the errors in sample code and offering it up to wrox in exchange for refund of this purchase.Be warned. This is a great reference book, the code is bukaki.",
                "review/helpfulness": "30/33",
                "num_reviews": 33
            },
            {
                "review/text": "This is obviously a book written by a collective of PHP4 programmers who have taken code that they've written and are familiar with (and which is sometimes outdated), and attempted to put a Object Oriented face on it in order to make a little money from this book.Notice that if you're looking for a comprehensive PHP5 book, this is not it. The authors don't even mention the new MySQLi extension for PHP5 nor the SQLite database. It's obvious they come from and are still in the pre-PHP5 world. They also are slanted towards Smarty page templates and using Postgres for their examples. They give only a passing mention (one page, three sentences) to MySQL.If you do buy this book, be prepared to go to www.wrox.com and the forums to find corrections to the code examples made by readers. Be prepared to re-write many of their examples.All in all, this might be a generally useful book, but be advised that the grammatical errors, code mistakes, and parochial attitudes don't make it the best.",
                "review/helpfulness": "13/15",
                "num_reviews": 15
            },
            {
                "review/text": "For years I have relied on the reviews on Amazon to help me select the technical books I would purchase, this is only the 3rd time I've been moved to actually write a review and the first 5-star rating I've given. I bought this book because it seemed to have a lot more depth on oop in php5 than other titles available. What I got was that, plus a whole lot more.If you are a garage php programmer, a hobbyist or a novice... if you don't make your living programming (or aspire to) - then this book is not for you.On the other hand, if you are a professional, you will find that this book is written by professionals with you in mind. All of the excellent PHP5 related instruction and reference is discussed in the context of serious development methodologies and practices. It gives you insight as to how a serious development team can (and does) approach large-scale development projects in PHP. Any by the way, it ends forever any doubts you may have that PHP could or should be used for such projects.Nice job guys! I only regret that I have but 5 stars to give.",
                "review/helpfulness": "11/11",
                "num_reviews": 11
            },
            {
                "review/text": "I agree that this book must have been rushed through development considering all the typographical errors, but I also agree that most of them are obvious and easy to overlook. I also agree that all the examples are written for PostgreSQL. I use both PostgreSQL and MySQL, so I don't have a problem with converting the code to use the new PHP mysqli functions. Other than quoting field names, there aren't many differences between PostgreSQL syntax and MySQL syntax. What this book does is start from chapter 1 showing you how to use Object Oriented Programming with PHP, and it does an excellent job of carefully covering each step so that you have a solid foundation to move to the next chapter. I love this book! Even with a mistake in the code on the errata page, it still rocks. Wrox books are the best!",
                "review/helpfulness": "5/6",
                "num_reviews": 6
            },
            {
                "review/text": "I like the topics covered in this book. However, there are a number of grammatical errors throughout and the codes in the book are full of errors. If you're up for the challenge of surfing the books forum page at [...] to find code fixes, then this book is for you. But, if your not the adventurous type and like codes to work out of the box then this book isn't for you.",
                "review/helpfulness": "5/6",
                "num_reviews": 6
            },
            {
                "review/text": "Ok, before you buy this book check the publisher's forums (Wrox). It's a bad sign when you see a 3 page thread concerning errors (both with code and grammar).Of course I didn't follow my own advice. So I'm stuck. ;(Don't make the same mistake.",
                "review/helpfulness": "4/6",
                "num_reviews": 6
            },
            {
                "review/text": "This book is just what the PHP community needs. I come from a strong C++ background, and I have struggled with the huge amounts of poorly written PHP code out there. The PHP community needs to step up and become professional, and this book is a must read for anyone that wans to create solid software. This book touches on the most important aspects of high level software design using PHP. It also provides some usefule code and examples to help illustrate the benefits of proper Object Oriented design.",
                "review/helpfulness": "4/5",
                "num_reviews": 5
            },
            {
                "review/text": "I gave it 3 stars for the inspiration that the discussion of a great breadth of PHP/OOP topics provides. There's everything from design techniques to coding practices to project management. Unfortunately, the treatment of most topics is somewhat cursory and many of the code examples are either not thought out carefully or don't work. Thus the code, although it takes up a substantial part of the book, has to be seen as illustration material only. Some of the concepts I found confusing. For example, I am not quite able to understand the purpose of a collection class (chapter 5), given PHP's dynamical typing and associative arrays. Furthermore, the MVC model (chapter 13) is introduced as having a fourth \"infrastructure\" component. I am not sure what architecture model this would constitute, but it is probably not an MVC model. There are many such quirks in ths book. Programmers who are interested in advanced OOP concepts will find this book to be a good overview of methodical -as opposed to ad hoc- software construction with PHP. In order to actually learn and apply these techniques, a more thorough introduction to object-oriented theory and design is probably required.",
                "review/helpfulness": "4/5",
                "num_reviews": 5
            },
            {
                "review/text": "I have been a PHP programmer for several years now, and this book just took things to a new level for me. It inspired me to build more scalable and secure applications and to become a better programmer. Though this book is about Object Oriented PHP, it also covers things like Project Management, templating, and specific Design Patterns.This book is chock full of great code examples - real world examples. The authors have a great writing style that makes this book an easy read without getting bored or lost.If you are looking to become a professional PHP programmer, this book is a must read. It allows you to get a better grasp of OOP and its patterns and approaches.",
                "review/helpfulness": "4/5",
                "num_reviews": 5
            }
        ]
    },
    {
        "Title": "expert vb 2005 business objects experts voice in net",
        "description": "Popular conference speaker \"Rocky\" Lhotka shows how to use the framework to create a sample application and demonstrates how easy it is to write Windows, Web, and Web services interfaces for applications based on it.",
        "authors": "['Rockford Lhotka']",
        "infoLink": "http://books.google.com/books?id=AS7zAQaKt-oC&dq=Expert+VB+2005+Business+Objects+(Expert%27s+Voice+in+.NET)&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "If you are looking for a great deal of practical advice and a working sample on how to build a framework for your application I think you will get a great deal out of this book & the CSLA framework that it explains. I was really pleased with how this framework solves many of the problems that our company wants to solve in our new software design. Having read several articles and \"patterns and practices\" papers I still had more questions than answers until I read this book. I finally feel like I'm confident enough in a framework that our company can begin writing our new version.",
                "review/helpfulness": "8/9",
                "num_reviews": 9
            },
            {
                "review/text": "I an experienced .NET developer looking to take my skills to the next level through use of design patterns, and perhaps even more importantly, good ways to code business objects that use relational data. Since the title is \"Expert VB 2005 Business Objects\", I thought I'd hit the jackpot by finding this book... but it has just turned out to be mediocre so far.I'm on page 113 and I probably won't finish reading this book. Instead of a methodology for the creation of business objects, including creating a business object interface structure, hints on how to reuse as much code as possible within a business object hierarchy while allowing to remain flexible and extensible, and pointers on how to effectively retrieve and store data, I basically got a 600-page long book on how to use a class library that someone else has already created, called CSLA.NET.Don't get me wrong, the author is obviously highly skilled, and I saw some interesting things in this book, but I want to write my own code - I just needed some help learning how to code business objects like an \"expert\" and this book isn't fitting the bill like I'd hoped.",
                "review/helpfulness": "5/5",
                "num_reviews": 5
            }
        ]
    },
    {
        "Title": "inside c microsoft programming",
        "description": "This book has the same practical approach as the previous \"Stack Frames: A look from inside\" where the reader can find useful information on many of the topics addressed here. By focusing on the main subjects, it reviews some implementation details that are often overlooked or left out when studying the C language for the first time.This explains why there are so few chapters, which cover only the most important topics of the language and, often, long sections with poorly detailed definitions but rich with examples and tests to be carried out by the reader.Therefore, the book is addressed mainly to students who have already learned the language and wish to achieve a better understanding of it by observing how the source code is translated by compilers. It's a chance to explore a world so mysterious and exciting, whose importance is often undervalued.The trouble of looking at the assembly code and comparing it with the C source is amply repaid by the knowledge of how computers work and how to optimize code snippets that are responsible for slowing down the executable, assuming the proper algorithm and optimization options have already been chosen.The working environment will be a GNU operating system installed on a personal computer with a 64-bit x86 processor. The working tools will be two compilers (gcc, clang) and a debugger (gdb).",
        "authors": "['Giuseppe Di Cataldo']",
        "infoLink": "http://books.google.com/books?id=lWvntAEACAAJ&dq=Inside+C&hl=&source=gbs_api",
        "categories": NaN,
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "I beg to differ with most reviewers: the book is not so good to deserve 5 stars, or even 4. I give it 2 stars only because 1) it really is one of few books that focus in C# and doesn't go into a myriad of other .NET topics, and 2) some of the examples are insightful.However, the book's goals are inconsistent in general. The first chapters give an overview of object-oriented programming, so it seems the book is geared towards beginners, who might not know C and C++. But many examples use language features that were not introduced before, and in some of them the author doesn't even try to explain what are these things and why were they included. Programmers experienced with other OO languages (mainly C++ and Java) will be able to understand, but these readers wouldn't need to read an introductory overview of OO concepts. That's why the book is inconsistent.Unfortunately, there are more problems: some examples weren't particularly well-thought, and one of them (about user-defined conversions) is nothing short of horrible. Ok, so I may be stupid, but I had to type the code, compile it, and trace its execution step by step to really understand it. And after all this I could not believe what I saw: a Celsius object really stores temperatures in fahrenheit, and only when it is converted to a float through a user-defined conversion is that the numerical value of the temperature is converted to Celsius. The same happens in the Fahrenheit class (which stores temperatures in celsius, in the example). And this conversion to float is only required when the value of the object is to be displayed... talk about \"textbook examples\". Kids, don't try this at home. It's really terrible, terrible practice in real-world code.As a last note of discontentment, the book really should not be called \"Inside C#\". Aside from a few superficial looks at what the compiler is doing by examining disassembles of code, nowhere does the book treat the language in depth. It is more of a \"fast overview of C# for people that already know at least C++\". One of the many examples of shallowness that I happen to remember now is about method overloading: precise rules for overload resolution are not given anywhere, only hinted about.Summing up, it is not worthless, but it's far from definitive. Better books on C# will surely appear, as we developers deserve. Right now I recommend \"Programming C#\" from O'Reilly over this one.",
                "review/helpfulness": "48/57",
                "num_reviews": 57
            },
            {
                "review/text": "I was looking foreword to getting Inside C# in the mail. I was very disappointed when I started reading it. I bought the book thinking they used the title of one of my all time favorite books &#8220;Inside Visual C++&#8221; by David Kruglinski. He would be rolling over in his grave if he knew about the contents of this book.I am a professor who has been teaching programming languages for about two decades. I currently teach advanced concepts in C++, Visual C++ Windows programming, Visual Basic and Java. I am very experienced in assessing books for my students. Inside C# should not be you first introduction to C#. It is worth reading for the insights into the development of the .Net and C#. But it should be the third or forth book you read about C#. Inside C# does not effectively reflect the new emerging .Net technology nor C#.Tom Archer claims to be a good programmer but his writing skills leave a lot to be desired. The level at with he covers the subject matter ranges from a level so simple it is boring to overly complex concepts leaving the reader with the thought, &#8220;what is he say?&#8221;Last comment, the paper quality of the book is so poor that the yellow highlighter and red marking pen bleeds through the page!",
                "review/helpfulness": "28/36",
                "num_reviews": 36
            },
            {
                "review/text": "Unless you're just not paying attention, Microsoft .NET is poised to become the biggest thing to hit software development since the introduction of the Win32 SDK. At the forefront of this effort is a new language called C# (pronounced c sharp) - a hybrid of C++ and Java with the simplicity of Visual Basic.Unfortunately, until now all of the first books on C# have really been little more than superficial coverages of the language's syntax where the authors spend little to no time detailing why and when one would want to use the different aspects of C#. What I wanted was a book that not only tells me how to use something (they have on-line help for that), but explains the concepts behind the feature's existence.Now there is such a book: Tom Archer's Inside C#. Archer, who runs the CodeGuru Web site and writes the popular C#/.NET Web newsletter, offers the most complete tutorial on using this new and powerful language.The first section of the book is an overview section aimed at the programmer new to object-oriented and .NET development. This section includes chapters on .NET and the CLR and provides a clear and concise explanation of how it all ties together. Once that is done, he then has a chapter devoted to writing and compiling your first C# application to make sure that your environment is set up properly.From there, the second part dives into writing applications. Here you learn all the fundamentals of C# including its interaction with the .NET Common Type System, value types, reference types and the concept of boxing and unboxing. He then goes on to show how to define classes and struct and write applications using the basics of arrays, enums, properties and indexers. Archer finishes up this foray into the fundamentals of C# by explaining how you can extend the C# language with attributes and how interfaces enable COM-like interface-based programming in C#.In the third section (Writing Code), Archer then covers the topics of expressions, operators, the controlling of program flow and exception handling. In addition, advanced topics such as operator overloading and the use of delegates in writing event handlers is covered.Finally, the last section (Advanced C#) is easily my favorite. This section includes some of the best information I could find anywhere on such subject matter as multi-threaded programming, reflection and versioning. The Interoperating with Unmanaged Code chapter alone covers how to use COM components from C#, how to write &quot;unsafe&quot;, or unmanaged code and how to use Win32 DLLs from C#.Having read several of the C# books currently available (Eric Gunnerson's A Programmer's Introduction to C# and Ben Albahari's C# Essentials) I have to say that I was quite pleased that Archer didn't take the easy route in simply telling me how to use a given language construct - but instead took the time to fully explain when and why I would want to use it.",
                "review/helpfulness": "30/35",
                "num_reviews": 35
            },
            {
                "review/text": "If you want an easy to read introductory book on C#, this is probably the best so far. If you want to learn how to build real world apps, look elsewhere, as this book does not cover the .NET Framework classes.This bears repeating: This book focuses on C# and not the .NET Framework classes. It is useful for learning C#, but it is not useful for learning how to build business apps. As all of your data access is folded up into the .NET Framework classes, you will not learn data access from this book.While most of the code is simple enough to work under beta 2, the book was written using beta 1. I have yet to run into code that blows up (technical term ;-&gt;) under b2, but it is possible. Since it does not cover the Framework, it is probably safe.The strong part of the book is the breakdown of both beginning and intermediate concepts and the plethora of code samples (have to install from the CD to use). Each concept has at least one sample, and some concepts have many more, each building on the first.I have to rate this book as average, as it does not quite measure up completely to the cover copy. I kicked it up one star (to four) as it is an Inside book, which are typically aimed towards the developer/user that is just starting out in a technology. I would have knocked off stars if the code would not compile under b2, as it comes out in the next few weeks. Since it covers the language more than the Framework, this is not an issue.I am sure there are those who think this rating is a bit high, but let me explain. If you are advanced, or have played with C#, this book is not for you. As it is not aimed for the advanced market, per se, I cannot fault the book for what it is.Conclusion: If you want to learn the C# language and syntax, this is not a bad book. As it does not touch the .NET Framework classes, it will not be completely obsolete in a month, as will large sections of every other C# book. If you are interested in learning more about the Framework classes, and building real world apps, I would wait until the next round of books come out. Those in the next couple of months will most likely either be rushed or error ridden, so watch the reviews before buying.",
                "review/helpfulness": "16/17",
                "num_reviews": 17
            },
            {
                "review/text": "If Amazon.com had an MVP award (Most Valuable Purchaser) I'd have it. I spend a lot of time and money purchasing only the best technology books. Now with that said, let me tell you about &quot;Inside C#.&quot;It's, hands down, the best book I've read. Right off the bat Archer explains the fundamentals of OOP, (a chapter all of us should read no matter what kind of OOP geniuses we think we are). He then goes into introducing .NET and never looks back. From C# Class Fundamentals to Writing Code and on to Advanced C#, he keeps you going and motivated to learn. I've gone through the book twice now and have it 'dog eared', marked, scribbled in and flagged.The author knows his stuff and it shows. Archer is an intelligent well-spoken author that gets the point across no matter what level of experience the reader has. All through the book he explains and re-explains what he's trying to say, (just in case you missed it the first time). Very few authors do this and needless to say it leaves many of us wondering what the heck their point was.In short, don't get left behind....&quot;GET THE BOOK!!&quot;",
                "review/helpfulness": "13/14",
                "num_reviews": 14
            },
            {
                "review/text": "Having been bitten before by the hype of a Miscrosoft Press book, I was a little worried when this book finally arrived. However, I can honestly say that this book met and even exceeded my expectations. It is by far the best beginner level book on learning C# on the market. I would like to have seen a bit more .net class stuff, however I didn't take off for that on my ranking because the book's focus is C# and not .net. Having said that, the book does contain a couple of the absolutely best chapters on the .net topics of multithreading and com interoperability available. With regards to the C# language, the book took its time in presenting subject matter without being overly verbose or condescending. I especially liked the fact that as one reviewer said, each topic had at least one demo to further explain what the author was saying and many topics had multiple demos - each building on the previous. I definite good buy in my opinion.",
                "review/helpfulness": "12/13",
                "num_reviews": 13
            },
            {
                "review/text": "This book is focused on only one thing: the C# programming language.A lot of C# books on the market today cover topics like ASP.NET, language interoperability, the .NET Class Library, Visual Studio.NET in addition to C#. This dilutes their focus on actually programming using C#.What developers need today, and moving forwards, is a C# language reference and a book that covers *how* to use the language features to your advantage. Inside C# delivers in both areas covering topics that every C# developer needs to know. Coverage includes essentials like working with arrays, attributes, and delegates. Inside C# also provides in-depth coverage on topics like exception handling, defining your own interfaces, and threading (even going so far as to explain when it isn't appropriate to use threads and how to synchronize threads - a lot of texts don't even mention these issues let long go into detail about them!).This book is a `must have' for any developer that serious about not only learning C#, but also enhancing their skill-set to best take advantage of what the C# programming language offers.",
                "review/helpfulness": "10/12",
                "num_reviews": 12
            },
            {
                "review/text": "As someone who has developed software for 25 years, including 4 yearswith C++ and none with Java, I find some features of this book appealing,but have the impression that clearer, shorter books must exist that coverthe same material. This nearly 900-page book covers a wide range of C#topics and is meant to be especially readable for people that know C++or Java. An appendix describes the assembly-language-like intermediatelanguage into which C# and other languages are compiled. Examples of C#code account for a substantial fraction of the book.Many of the examples show intermediate code into which example C#code has been translated. Early on, I found these translations andthe appendix useful for getting a feel for the intermediate language.After a chapter or two, I started skipping over the translated versions.Eliminating most of these translated versions would make the booksignificantly shorter without compromising the discussion.The book has a chatty writing style that is probably intended to befriendly. There is nothing inherently wrong with using this idea inscientific and engineering writing, but this book's presentation comesacross as paternalistic and verbose. For me, the last straw, and thecause of my writing this review, is a flowery sentence in the chaptersummary on page 212:\"In this way, attributes are like a breath of fresh air -- in onefell swoop releasing the shackles that have bound developers for somany years.\"Some of the writing is equally painful to read, and distracting. Writingimprovements and better editing could clarify the book and make it, say,20% shorter. Problems include the excessive and not-quite-correctuse of the words \"however\" and \"although\", frequent use of the word\"I\" in a book with two authors, and referring to terms that have notyet been defined. Some of the book's examples are framed in terms ofMicrosoft Windows topics; even someone intimately familiar with Windowsmight feel that the material to be explained does not require the amountof text that this book uses to set up its examples.The book, published by Microsoft Press, refers to the intermediatelanguage almost exclusively as MSIL, for \"Microsoft IntermediateLanguage\". There is apparently a distinction between MSIL and CIL(\"common intermediate language\"). The book's index has some two dozenentries for MSIL, but just one entry for CIL. This entry points topage 548. The relationship between CIL and MSIL, whatever it is, isimportant enough that it needs to be explained in the first few pages,and indexed! This and similar cases in the book give the impressionthat the C# language is a Microsoft product for Microsoft platforms only.It appears, though, that this is not Microsoft's intent, and that C# isnot evolving in this way. See, for example, go-mono.com, or numerousarticles on the web about the adoption of C# and common languageinfrastructure for standards by the European Computer ManufacturersAssociation (ECMA).When reading about something familiar in this book, such as C# conceptsthat are similar in C++, I went through the material quickly and skippedmany of the examples; with less-familiar topics, I found myself readingthe material and then seeking clarification elsewhere. It's often nicefor readers to have multiple sources when learning something new, butin the case of C#, a clearer book can probably be written for thesame audience while presenting less of a need to use multiple sources.Particularly for experienced developers, using other books to learn C#should be more efficient than using this one.",
                "review/helpfulness": "11/12",
                "num_reviews": 12
            },
            {
                "review/text": "Well I heard that C# was supposed to be the new hot thing, so i decided to buy a few books about it.But after reading 1/2 this book in a day I can tell you one thing, don't buy this book!The first 1/2 of the book it just talks about the .net and gives hardly any code.Finally on chapter five it starts talking about classes, interfaces and all that good stuff. But his examples are so short and dumb.Finally on chapter 10 he talks about the expressions and operators and how to use the loops. To me it makes no sense why he started talking about OOP stuff before he covered the basics on how to do loops and expersions.Finally at the end there is some other stuff that i haven't read yet ;-0.But in general I thought his examples were crappy, and short. With the book there is a cd rom that contains all the files and examples he made, and it only adds up to about 1.2 megs!The last programming book I bought was Programming Windows with MFC and the author had great examples.My advice is to to find another book if you want to learn how to program c#",
                "review/helpfulness": "11/12",
                "num_reviews": 12
            },
            {
                "review/text": "According to Nielsen BookScan - the retail sales monitoring service for books that is used by all major book publishers - Inside C# is now the best-selling C# book of all time! I'd like to thank all of you for your support and let you know that I've created several Web pages on my ArcherConsultingGroup site that include:* The latest demo source code* A current errata* A discussion board for asking me questions about the bookThanks again for your continued support!Tom Archer",
                "review/helpfulness": "8/12",
                "num_reviews": 12
            }
        ]
    },
    {
        "Title": "instant corba",
        "description": "The latest release of CORBA boasts many new features that were highly anticipated by developers, including all of the necessary services for building fully distributed applications regardless of platform or programming language. Written by a leading international authority on CORBA and the bestselling author of CORBA 3 Fundamentals and Programming, Second Edition (0-471-29518-3), this book delivers on its title, providing a quick and easy-to-understand reference to CORBA 3 for developers who just need the basics to the upgrade--and don't have the time to read a huge reference guide. After reviewing the features grouped under the CORBA 3 banner, Siegel goes on to describe the integration of CORBA with Java and the Internet, mapping XML to OMG IDL, messaging, QoS control including specializations for Real-Time and embedded systems, and the CORBA Component Model (CCM).",
        "authors": "['Jon Siegel']",
        "infoLink": "https://play.google.com/store/books/details?id=imin67wVk90C&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "I needed to understand CORBA very quickly. This was the onlybook on the shelf at my local bookstore that did not seem way too complex for a beginner so I bought it. I had done a quick Internet search on CORBA and found a six-page overview that was several years old. I am afraid that Instant Corba was only a little more useful than those pages.The book is current through 1996 technology and that was a long, long time ago (as of August 2000). If the authors had concentrated on concepts and ideas rather than getting tangled up with then current commercial implementations of CORBA the book would have more lasting value. To be fair, they do provide a clear overview of CORBA concepts and mechanisms. And considering that CORBA 3 is at hand while this book is from the era of CORBA 1 it does a good job of providing a grasp of what distributed object architecture and request brokering is about.If you need a high level over view it works. I thought the technical sections were great for teaching a manager what CORBA details involve but they were too high level to help if you need to actually code something...I guess I got what I wanted from this book. The reason it does not get a higher rating from me as an introduction is that it was tacky when it was brand new with it's theme of being a Martian report on CORBA, an intergalactic client/server web technology. And the cutesy stuff only worsened with age. Since it is an introduction the authors should have done a better job of choosing and explaining their vocabulary. Talking about information blobs and object webs with enthusiasm does not really help a beginner to understand what the industry is doing with object sharing to facilitate access to services. The book talks about middleware frequently and I think they should have presented that as a concept and worked on it's definition. Finally, the authors kept moving in and out of discussing then current products. The book frequently sounds like a marketing spiel and yet new ones replaced these products years ago. Weren't they familiar with upgrades, mergers, and market failures in 1996?",
                "review/helpfulness": "11/11",
                "num_reviews": 11
            },
            {
                "review/text": "This book covers CORBA both at a high level as well as in the details. Not only does it give a good view of CORBA but represents the thinking of the industry overall as to the proper architecture for component-based applications in the Internet age. It will not teach you how to program using CORBA but will prepare a designer or programmer for CORBA-based systems. I recommended this book to our training department as a text for a network computing architecture course.",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "First, a word about style. If you are irritated by the idea of a book that tries really hard to be all about funny little Martians being blown away by the sheer coolness of CORBA on the internet then do not touch this book. It's not clever, it's not funny and unlike John Gray's books, it does not serve a purpose of illustrating any particular concepts.Next, a word about the title. It is misleading. The book is about CORBA applications distributed over the internet to form what the authors refer to as the Object Web. If you want a book to tell you about using CORBA in another contect, then this is the wrong book.The book is split into four parts with a recommendation that reading parts 1 and 4 will give a non-technical introduction to CORBA and that parts 2 and 3 form more technical material which may be skipped.Well, if that is the case, why not put the fourth part after the first and before the two technical sections?The non-technical sections of the book contain little other than lists of suppliers and a claim that the web will soon be based almost entirely on CORBA. The introduction to CORBA that they give is inferior to that in most other CORBA books and now out of dateThe sections that are claimed to be technical are not. They are really just introductory concepts that are necessary before embarking on a book on CORBA programming. Having said that, they do provide a better introduction than many dedicated programming books.Finally, the index is very poor. When I tried to use it, I found more entries were in error than correct and I gave up on it.",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            },
            {
                "review/text": "This is technical writing at its sloppiest. Just for you to get a taste of it, let me quote from a section called &quot;What is a Distributed CORBA object?&quot; &quot;CORBA objects are blobs of intelligence that live anywhere on a network.&quot;What is a blob of intelligence? A program? A register? A line of code? And further: &quot;... the language ... used to create server objects ...&quot;The language changes to 'server' objects. Are there also 'client' objects? Are they different? You wouldn't know from reading this section. Note also that the section title refers to 'distributed' objects. Is this yet another category of objects? Is it so hard to give a clear definition?",
                "review/helpfulness": "2/3",
                "num_reviews": 3
            },
            {
                "review/text": "I dissagree with julio@greenwich.com. This book is an easy to read, lighthearted text that explains CORBA concepts without getting bogged down by technical semantics.It's an excellent precursor to further technical reading.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            },
            {
                "review/text": "This book is fun to read and inspiring, because the authors seam to love what they write about. Sometimes, however, the style is a little close to &quot;commercial advertising&quot;. The concepts and visions sound evident, the technology is explained at the right level of abstraction. If you have time, read this book as an introduction to Corba before buying a real programmer's guide to corba.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "learn microsoft visual basic scripting edition now",
        "description": "With this guide, users now have a road map to scripting rich application features into HTML Web pages, creating Internet and Intranet applications, and automated, customized applications. Written by an experienced Visual Basic, C++, and Java author, the book is filled with sample code--essential for a new scripting language.",
        "authors": "['Gary Cornell']",
        "infoLink": "http://books.google.com/books?id=Qwh_PQAACAAJ&dq=Learn+Microsoft+Visual+Basic+Scripting+Edition+Now&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "First, this is a good book for learning vbscript, or brushing up if you are at a moderate level. I don't believe that expert vbscripters would find much use in it, and it is not a reference book.However, I have no programning background, and I wanted a good tutorial book. This is that book. Note that the book covers Vbscript has it relates to the web, not to WSH (Windows Scripting Host). I keep this book handy when scripting, and refer to it a lot, but I am still in the beginner stage.Again, as an introduction to vbscript, get this book!",
                "review/helpfulness": "9/9",
                "num_reviews": 9
            },
            {
                "review/text": "I buy alot of programming books and most of them get 2 pages read before they go on the shelf but this book I finished in no time flat! Good examples for a beginner. A little too much emphasize on ActiveX components but oh well. A+",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "Incredibly basic...assumes you don't know to code at all. Needs six chapters to cover variables, functions, arrays, loops! One shallow chapter about the debugger. Security coverage--a bullet on the back cover--a joke. No mention of Windows Scripting Host. Maybe good for someone who wants to learn programming...and makes the weird choice to start out with VB Script. In sum, a bizarre book.",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            }
        ]
    },
    {
        "Title": "eclipse rich client platform designing coding and packaging java applications",
        "description": "Written by the leaders of the Eclipse RCP project, this is the first and ONLY book on Eclipse Rich Client Platform!",
        "authors": "['Jeff McAffer', 'Jean-Michel Lemieux']",
        "infoLink": "http://books.google.com/books?id=LjYYngEACAAJ&dq=Eclipse+Rich+Client+Platform:+Designing,+Coding,+and+Packaging+Java+Applications&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "This is really an awesome book because:* I was suprised how extremely complete this book is. It not only explain how to develop a application, but also how you do your HELP-system, the plugin update mechanism, dynamic plugins, brand and package your application. Also chapter 25 called 'The last mile' explain Native Installers, Webstart and multi user install scenario. SO:it explains the whole cycle, for creating windows/views, creating the help, and distributing the application!* It offers a tutorial for building a real world application what the authors have called Hyperbola (a Chat client). This tutorial has a good level, compared to books like '... for dummies', '... in 24 hours' and '... unleashed'.* The tutorial application EVOLVES over the chapters. So after the end of every chapter the application is running, and more (complex) functionality is added every chapter. So you don't need to follow all chapters before you see results of your work (it's not a big bang application). This keep you motivated to follow the book and play arround.Or how the authors call it in the book:\"The next few chapters focus on iteratively developing Hyperbola. This next interation is interesting because it allows you to quickly get something running you can show to your mom, your boss, or your friends. It's also a lot more fun to learn RCP while developing something concrete.\"* Every chapter starts with the goals of this chapter,e.g. what you will add to the application in this chapter.* This book does NOT contains cheap fillers (some books repeat things endless, starts with chapters introducing Java, prints the Java Doc of a library,etc.). It is simply to the point.* The tutorial is very complete and contains a lot of explaination about what you're doing. It is not one big listing. E.g. it explain what Actions are, what you can do with it, where to code them, and of course how to code them in your Hyperbola application.* It is very complete because it e.g. starts how to install Eclipse and the Eclipse RCP SDK and how you need to configure them. This is a real timesaver for novice Eclipse people. You just need to follow the steps in the introduction chapter.So this is a learning-by-doing book with a good level. After you have read this book (and played with Eclipse), you are able to develop simple RCP-applications, you know how the RCP is structured, how to package them, etc.",
                "review/helpfulness": "44/46",
                "num_reviews": 46
            },
            {
                "review/text": "I bought this book almost the first day it became available, I think in November of last year, and loved it, despite numerous minor errata which I submitted but have not been published. It explains the structure of the RCP very well, as well as I have seen anywhere. Parts I, III, IV and V are excellent.This is a great introduction to Eclipse RCP ... _IF_ you are happy to stay with Eclipse 3.1 and Java 1.4. _BUT_ sadly, Eclipse 3.2 has obsoleted some of the techniques used in Part II, the tutorial, which is the main part of the book. For in 3.2 example you no longer need to create a target manually yourself. Also the tutorial's code uses APIs that are deprecated in Eclipse 3.2, and it uses code seen as undesirable by Java 1.5's generics support. In addition Eclipse 3.2 mandates the com.ibm.icu (International Components for Unicode) package which means that the tutorial as delivered simply will not deploy as-is when you get to the packaged product level in Chapter 9.Yes, all these problems are fixable. But be careful because you will have to fix these problems manually, which cuts you off from the cool \"Samples Manager\" tool which synchronizes your code at the end of each chapter.",
                "review/helpfulness": "35/38",
                "num_reviews": 38
            },
            {
                "review/text": "Good book, except..., the code samples are embedded in a plugin that only works with Eclipse 3.1. I tried 3 times on Mac OS X to load the code samples some way, including the book's website, and disaster happens. Not only does the code not show up, but all my closed Eclipse projects opened up, and my entire Eclipse 3.2 crashed big time... I was doing fine going through the tutorial, Hyperbola ( a chat room app), and then the book gets to the point where it forces you to install the code samples from their website. You are stuck if you have Eclipse 3.2 running.",
                "review/helpfulness": "18/21",
                "num_reviews": 21
            },
            {
                "review/text": "This book starts out in a very promising manner - coming in from a 10,000 ft view to a 1,000 ft view. After reading Part I, I felt that I had a great book in my hands. With Part II however came the big let down: you're suddenly dropped into a chaotic sea of microscopic views. With its (basically laudable) approach by example, it turns essentially into a collection of recipes, that does very little to the understanding of the underlying structure and concepts of RCP. This is probably a great book if you know what you want to do and why, it is however inadequate if you are in search of the why. It leaves too many loose ends, and in numerous instances assumes that you have fully absorbed the superficial ideas of earlier sections and hence leaves you hanging there. Calling the CD to the rescue - again a great idea how it is integrated - does not always help: for instance Chapter 10 seems to be totally messed up. The text and examples contain a number of misleading typos or omissions, and references are given to Eclipse code that I could not find.In hindsight I sense that much of the frustration with Part II could be avoided by starting with Parts III and IV: after working through these latter parts, I felt more at ease filling out the unfortunate and time consuming gaps in Part II.I suspect also that both the code and the book will need to be updated for release 3.2.",
                "review/helpfulness": "16/17",
                "num_reviews": 17
            },
            {
                "review/text": "Having read \"Eclipse RCP\" in its entirety as a manuscript reviewer, I can tell you that this is a superb book. The authors have done a splendid job of creating a technical book that serves well as both a tutorial and as a reference.Through the development of a single example, the book covers everything you need to get started building and packaging an Eclipse RCP application. The book even includes a CD containing all the software you'll need to work through the tutorials and build your own RCP applications.While a single book could never describe every aspect of the Eclipse Platform, this book is certainly all you need to get started with Eclipse RCP, and then once you've found your feet, there are other books in the Eclipse Series that will help expand your knowledge of the Eclipse Platform and Eclipse plug-in development.This book has been produced extremely well: The text is well written, the pages are full of easy to follow code snippets, and there are sidebars that share best practices and handy tips, as well as plenty of good quality screen shots and diagrams.Buy this book. Read this book. You'll be glad you did.",
                "review/helpfulness": "12/15",
                "num_reviews": 15
            },
            {
                "review/text": "I wanted to start off by saying what a treat it has been to use McAffer and Lemieux's book. It is well written and easy to comprehend. The chapters follow a logical sequence and I particularly like the way that \"Notes\" and \"Tips\" clarify and support the rest of the material.My team is in the later stages of implementing a Rich Client product, and \"Eclipse Rich Client Platform\" has helped us with both small details and broad concepts. We referenced it extensively when creating and debugging an automated build (Chapter 24), adding Update Actions to our product (Chapter 14) and Reporting Status (Chapter 17). Although we took the \"tossed salad\" approach to using the book it also works very well as a step by step tutorial. You don't need to be a Java guru or Eclipse expert to understand the book, yet it is still useful for the relative beginner.The last time I wrote in praise of a book, it was to JRR Tolkien for Lord of the Rings. I distribute my praise sparingly and this book deserves it.",
                "review/helpfulness": "6/7",
                "num_reviews": 7
            },
            {
                "review/text": "After I wrote the following review and worked with some other documents, I returned this book and worked again with the example on page 52. And I suddenly guessed that the code was not obsolete but erroneous. (Examining RCP reference I found IPlatformRunnable.run() was replaced with IApplication.start() but they wrote IApplication.run() instead and completely forgot to implement IApplication.stop() ) I looked around for an errata. Found here: [...]. And I've decided to read this book again with errata. So I change my rating to 3 stars. I'll not give them 4 or 5 stars; because their sloppy work cost my valuable time. They had enough time for an error-free version before the 2nd edition.for ERRATA: [...]MY OLD COMMENT for 1 star.Even the authors promise to follow Galileo (Eclipse 3.5) release, the book does not follow Galileo. The very first class of the RCP example project Hyberbola, namely the Application class, implements IApplication.run() which is obsolete. New release should implement start() and stop() methods instead. The screen shots of wizard dialogs in this book, does not follow the actual wizard dialogs of Galileo. Appreantly the authors were too lazy to update this long awaited 2nd release, and the editors were sleepless during corector readings.",
                "review/helpfulness": "6/7",
                "num_reviews": 7
            },
            {
                "review/text": "Don't buy this book unless you are an experienced Java coder, who knows Eclipse, and has the time and inclination to debug.The book walks you through building a single instant messaging app. Each chapter is a step, with example code downloadable in Eclipse via the authors' Samples Manager.Beyond Ch 8, their examples have bugs, either in the code itself or the configuration files, or the instructions in the text.Some are trivial, such as in Ch 9 not telling you that you must un-check \"Generate a metadata repository\" in the Export Wizard or no executable is generated.Some are huge, such as their sourcecode for Ch 16-17 using a different version IM library than earlier or later chapters. This results in compile errors until you manually debug the code.Some are just irritating, as their Ch 12 sample code not including the login code developed in the previous chapter. This causes a NullPointerException in ContactsView.Or their Ch 16 drag-and-drop that doesn't drop until you manuallly make extension point IDs match.Operationally, their IM example relies on a server at their book site.Over the several weeks I was using their book, their server was down. Fortunately, our company has an accessble XMPP server, else I could not have run their examples.And fortunately folks on the book's forum were helpful.So with some debugging, I was able to run most of their examples.DO buy this book if the above don't trouble you.Their example is broken into manageable chunks. There appear to be no major gaps in their progression. Their example code is clear and concise, if buggy. And their writing is clear, concise, and complete.Also, their book thoroughly covers plug-in management and updating, and the use of OSGi.For more on this saga, go to the book's Web site, [...], and look at the forum entries.Would I buy this book again? Yes; I learned a lot from it. But I've been coding for $$ for 30 years and like debugging.",
                "review/helpfulness": "7/7",
                "num_reviews": 7
            },
            {
                "review/text": "I bought this book because online references for this material are woefully inadequate and just plain outdated. Every resource I could find said this is THE BOOK to get to get a thorough walk-through on the technology. I bit and shelled out the $$$ for the book. The first few chapters are okay, if not really engaging. They give an \"okay\" review of the platform and how it works, if you can overlook them constantly tooting their own horn about how great the Eclipse IDE is (the application that led to the development of the Eclipse RCP).I was looking forward to building the application the book uses to teach the technology, an instant message client they call \"Hyperbole\". I figured once we started development, things would get exciting.The problems began in Chapter 3. The walkthrough of how to create a \"Target platform\" bore no resemblance to what needed to be done in the IDE. I knew that the IDE had gone through a version or two since this book was published--only in May, for crying out loud--so I tried to struggle through. It was hopeless. There is no way to resolve what was described in the book with what the IDE contains.Skipping that, since it was optional anyway, I sallied forth to the following chapters. Resolving the differences between the current version of the IDE and what the book contained was still troublesome, but I was able to figure out what the author(s) meant and create the initial application. I actually got the application running, but then it all fell apart in Chapter 5. One of the first tasks is to create a \"View\". I was able to add the view as described in the book, but it failed to show in the application. Debugging it was fruitless since the platform changes the fundamentals of how applications operate.Either the platform totally changed or the book is wrong. Checking the online errata was fruitless: the book does have some errata, but nothing addresses this problem. And that's where it stands. I unable (and unwilling) to progress any more through this this book simply because it's too frustrating.But I'm not the only one who found this technology (and book) frustrating: several co-workers met with the same problems and are confounded by the unreliable information on the Internet about this technology. Either this book needs to be updated for the numerous changes in the IDE, or RCP needs to settle down and stop changing so much, or both.I DO NOT recommend this book as a guide for the Eclipse RCP, despite the fact it is hailed as THE BIBLE of this technology.",
                "review/helpfulness": "5/6",
                "num_reviews": 6
            },
            {
                "review/text": "Eclipse Rich Client Platform is an excellent book for both introduction to Eclipse RCP, and for the more experienced programmer.They take a tutorial approach to introducing Eclipse RCP, and describe the building of an Instant Messaging client as an RCP application. This works very well, as it allows the reader to connect their own application-level needs to the mechanisms that RCP provides.Then they shift gears and discuss user interface concepts like the Workbench, Perspectives, Views, Editors, Actions, etc more abstractly, so that the reader can get a very thorough understanding of the main patterns and concepts in the APIs available to Eclipse RCP client applications. Finally they discuss development and deployment processes made possible by the basic plugin model, the update mechanisms, and product configurations.The authors do an excellent job of making RCP accessible for the uninitiated, while still presenting plenty of details for the more experienced RCP developer.",
                "review/helpfulness": "5/6",
                "num_reviews": 6
            }
        ]
    },
    {
        "Title": "programming jabber extending xml messaging oreilly xml",
        "description": "Jabber is a set of protocols expressed in XML, and an extensible framework that allows people and applications to exchange all sorts of information, from simple text messages to being used to extend the backbone of an enterprise data system. Jabber gives you the power to build applications that have identity, presence, and that can take part in conversations.Programming Jabber offers developers a chance to learn and understand the Jabber technology and protocol from an implementer's point of view. Detailed information of each part of the Jabber protocol is introduced, explained, and discussed in the form of mini-projects, or simple and extended examples. Programming Jabber provides this foundation by: Showing you how to install and configure the Jabber server Providing a detailed overview of the server architecture and configuration options Covering the core Jabber technologies such as XML streams and Jabber identifiers Referencing all of Jabber's XML namespaces Examining the client registration and authentication phases Showing how to deploy your own Jabber-based messaging solutions Demonstrating how to embed XML-RPC-style call mechanisms into Jabber Programming Jabber is divided into two parts. The first part serves as an introduction to Jabber; you'll learn about its features, why it's more than an IM system, and how to install and configure a Jabber server of your own. The second part provides detailed information about the Jabber protocol, and a series of practical examples, which can be used to solve everyday problems. The examples, in Perl, Python, and Java, use various Jabber features as a way of illustrating parts of the protocol.Programming Jabber provides the foundation and framework for developers to hit the ground running, and is the essential book on Jabber.",
        "authors": "['DJ Adams']",
        "infoLink": "https://play.google.com/store/books/details?id=tvh31VkWERUC&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "As a disclaimer, I have been involved with Jabber for 3 years, am the author of one of the more popular Jabber clients for linux, and am a friend of DJ's.Jabber finally has its Bible. DJ has written an excellent introduction into the world of Jabber, covering everything a programmer would need to become familiar with the protocol for this Open instant messaging system. He covers everything from the basics of what exactly Jabber is, how to deal with presence, messages, and basic extensions, all the way up to complicated and unfinished extensions such as XML-RPC. Anyone programming Jabber needs this as a reference, and anyone looking to get started in the Jabber world need not look further than this book.",
                "review/helpfulness": "15/15",
                "num_reviews": 15
            },
            {
                "review/text": "When I first picked up this book, I expeted to understand the Jabber protocol in sufficient depth to implement my own IM client. Instead, the approach this book takes is that Jabber isn't just an XML-based protocol strictly for IM, rather it is a general purpose event notification protocol that has some very nice message routing and user management features built into it. While I was reading about the messages that Jabber has defined as part of the protocol, I could easily see other applications/devices generating Jabber messages to notify subscribers (either other systems, or people) of events.This book covers everything relevant to Jabber technology, from lowest level innerworkings and extensibility examples for developers to configuration and deployment for admins. Most of the book is spent looking directly at the Jabber XML protocol, instead of a specific API implementation. This way, the book covers the technology and doesn't get lost in how one particular API models the protocol.",
                "review/helpfulness": "13/13",
                "num_reviews": 13
            },
            {
                "review/text": "I picked up this book after reading a good review on Slashdot.org, and I'm happy to say that I'm not disappointed.The book covers the installation of the server and the configuration (including a Jabber cluster), and then starts covering the XML protocol that is used to send information between servers and clients.Several useful real-world examples are given, including a CVS-notification system, keyword assistant, headline viewer, etc. There is even a project to hook Jabber up to a coffee pot using Lego Mindstorm, with the point being to show how flexible Jabber can be. Examples are in PERL, Python and Java.The book makes it quite clear that there is far more to Jabber than just instant-messaging.",
                "review/helpfulness": "9/10",
                "num_reviews": 10
            }
        ]
    },
    {
        "Title": "applescript the definitive guide 2nd edition",
        "description": "Mac users everywhere--even those who know nothing about programming--are discovering the value of the latest version of AppleScript, Apple's vastly improved scripting language for Mac OS X Tiger. And with this new edition of the top-selling AppleScript: The Definitive Guide, anyone, regardless of your level of experience, can learn to use AppleScript to make your Mac time more efficient and more enjoyable by automating repetitive tasks, customizing applications, and even controlling complex workflows. Fully revised and updated--and with more and better examples than ever--AppleScript: The Definitive Guide, 2nd Edition explores AppleScript 1.10 from the ground up. You will learn how AppleScript works and how to use it in a variety of contexts: in everyday scripts to process automation, in CGI scripts for developing applications in Cocoa, or in combination with other scripting languages like Perl and Ruby. AppleScript has shipped with every Mac since System 7 in 1991, and its ease of use and English-friendly dialect are highly appealing to most Mac fans. Novices, developers, and everyone in between who wants to know how, where, and why to use AppleScript will find AppleScript: The Definitive Guide, 2nd Edition to be the most complete source on the subject available. It's as perfect for beginners who want to write their first script as it is for experienced users who need a definitive reference close at hand. AppleScript: The Definitive Guide, 2nd Edition begins with a relevant and useful AppleScript overview and then gets quickly to the language itself; when you have a good handle on that, you get to see AppleScript in action, and learn how to put it into action for you. An entirely new chapter shows developers how to make your Mac applications scriptable, and how to give them that Mac OS X look and feel with AppleScript Studio. Thorough appendixes deliver additional tools and resources you won't find anywhere else. Reviewed and approved by Apple, this indispensable guide carries the ADC (Apple Developer Connection) logo.",
        "authors": "['Matt Neuburg']",
        "infoLink": "http://books.google.com/books?id=y6mbAgAAQBAJ&dq=AppleScript:+The+Definitive+Guide,+2nd+Edition&hl=&source=gbs_api",
        "categories": "['COMPUTERS']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "Apple has long pushed AppleScript as an easy-to-learn, English-like way of automating repetitive tasks on a Mac. Alas, I and many, many others have discovered from painful experience that AppleScript is hugely difficult to approach -- its learning curve never seems to flatten out. Even after writing thousands of lines of code in several programs that (eventually) worked, I still feel I'm groping in the dark every time I try something new. I've read other books on AppleScript, looking for one that would open the magic door and reveal the simple, friendly AppleScript that's supposed to exist.Matt Neuburg has given us the first AppleScript book that tells the deep truth: AppleScript is a quirky, inconsistent programming language that is not only hard to learn, but hard to learn for fundamental, structural reasons. Neuburg exposes the unavoidable difficulties that are built into AppleScript's design, and then shows us practical techniques for accomodating to them and using them.Anyone who reads this book carefully will be able to apply AppleScript with greater understanding and less wasted time, and be able to use it with far less of the disappointment, frustration, and even rage felt by all too many people who collide unprepared with AppleScript's tricks and traps.Since there's no &quot;look inside the book&quot; feature, let me summarize the main sections. Part I explores AppleScript in a system context: what it is meant to do; how it is used (with an intro to the Script Editor); and what its basic concepts are. (Contra another reviewer, this 90pp part contains nothing about history; it's all current and relevant stuff, needed later in the book.)Central to Part I is Chapter 3, &quot;The AppleScript Experience,&quot; which describes the actual process of building a program. This chapter so perfectly reflected the confusions, frustrations, and dead-ends that I've experienced with AppleScript that I was sold: this guy really understands the problems! He doesn't minimize them or blame them on me. Maybe he can show me ways to work around them, but whether he does or not, at least he'd validated them.Part II, 200pp, is a detailed and insightful exposition of the AppleScript language. Early in this part is a discussion of &quot;The 'English-Likeness' Monster,&quot; showing how the attempt to be friendly distorts the language and confuses users.Then Neuburg examines every detail of AppleScript's syntax and semantics. He doesn't do this like a typical &quot;tech writer,&quot; rephrasing the official documentation. He has taken the time to write code to test out every corner case and exception of the language, and he lays them all bare. He looks into AppleScript's baroque scoping rules and its inconsistent rules for implicit coercion of types.All of Part II is meat and drink to a fan of programming languages, and I read it through like a good novel. More to the point, it's a deep and thorough job of documenting the actuality of AppleScript: what syntax works, what the tricks and traps are, and what to avoid.Part III tries to extend the same thorough methods to the process of creating applications in AppleScript, beginning with application dictionaries. Here Neuburg, like every other AppleScript user, bangs hard into the basic structural flaw of AppleScript: that all the interesting semantics and no small part of the syntax are implemented in other applications, not in AppleScript. Everything you want to actually accomplish with AppleScript, you do by sending messages to other programs -- the Finder, TextEdit, BBEdit, Mail, and so forth. The only documentation you have is each app's dictionary, and it can never be adequate. Chapter 19, &quot;Dictionaries,&quot; contains a long editorial on &quot;Inadequacies of the Dictionary&quot; that details all the reasons that an app's dictionary can never tell you enough to use the app. Some of the reasons are structural (there's just no way to express the needed information) and some are due to human failure (the people who write dictionaries do a clumsy, inconsistent, and sometimes erroneous job). Neuburg can't fix these issues, but he does his best to prepare you to work around them. Nevertheless, as he says in another context, &quot;AppleScript programming is often indistinguishable from guessing.&quot;To sum up: this book is a deep, thorough exploration of all the quirks, dusty corners, and skeleton-filled closets of AppleScript. Reading it will make you far better prepared to use AppleScript productively.",
                "review/helpfulness": "200/204",
                "num_reviews": 204
            },
            {
                "review/text": "Sorry, Mr. Dickens, I just had to.First, the bad parts. If you are a beginner to AppleScript (particularly if you've had little programming or scripting experience), DO NOT even think about looking at this book. It will be so confusing and discouraging, you'll leave angry. There are plenty of books that show you how to do simple things easily with AppleScript. They may be deluding you into thinking that it will be simple to use AppleScript for more complex tasks, but at least, you'll be getting hands-on learning in the meantime. No book can be truly suitable for beginners AND experts and I never believed that claim about this book. Sorry, beginners, this book is STRICTLY for intermediate to advanced users.Having said that, I can begin to shower praise upon this masterpiece. As someone who has done some AppleScripting and have been through a lot of frustration doing anything beyond cookie-cutter work, Chapter 3 boosted my self-esteem about 10 notches! That chapter details Matt Neuberg's odyssey through the labyrinthine task of scripting FrameMaker. Been there, done that (in other apps)! So, I'm not such an idiot -- some of these object models aren't crystal clear.I had always thought that AppleScript was the underrated, undersold and underused secret weapon that the Mac platform could wield over the competitors, especially the dreaded Windows! After using it and then having my suspicions confirmed by this book, I realize that despite all its power, AppleScript has failed in its mission of being the intuitively obvious, easy-to-use, simple, everyday, plain English, \"scripting/programming-for-the-rest-of-us\" tool it apparently was developed to be. The good news is that if you are the true target audience for this book, you will be able to help out ordinary Mac users for fun and profit.I believe there is a definite line dividing the people who must have and will love this book from those who should avoid it like the plague (until they get some AS experience elsewhere). I hope this helps you decide.",
                "review/helpfulness": "113/116",
                "num_reviews": 116
            },
            {
                "review/text": "AppleScript The Definitive GuideWhat the Book is AboutThis book aims to provide a complete explanatory manual and reference to AppleScript, up to date with Mac OS X 10.3 (Panther).Target AudienceThe introduction states that the book assumes no prior knowledge of AppleScript or of any other programming language. While I agree that no knowledge of AppleScript is required, it's challenging to consider someone with no programming knowledge starting out with this book to use AppleScript as their first programming language. For experienced Applescript users, the book is likely to be an essential reference.What NOT to ExpectPerhaps like many others who had not used AppleScript, I believed it was a simple, English-like language that was very easy to use. I jumped eagerly in at the first chapter, certain that I would soon be told go sit at my Mac and type my first 'Hello World' AppleScript into some application or other.As I read and read chapter after chapter from the sofa, I realized it was not going to be quite so simple in either case.AppleScript, according to the author, has come close to extinction in the past, but is now entering a 'golden age'; it is a technical innovation and a labor saving device for the ordinary Mac user, yet it's not true to say that it's an intuitive language needing no real explanation.What to ExpectIn reading this book, the author's (Matt Neuburg) expertise in AppleScript becomes immediately apparent. So too does his extremely erudite writing style. For example, when I got to the list of 'apothegms' and discovered that this synonym for 'saying' or 'maxim' was dictionary.com's word of the week on June the 9th, 2000, I naturally began to wonder whether he read dictionary.com every week for fun.As it transpires, the author has degrees in ancient Greek and Classical Philology and had a career as an academic classicist before starting a new career in computing. He thinks computer languages are relatively easy. (See http://www.tidbits.com/matt/).The trouble with AppleScript is that to use it you have to use it to script an application, each application has a different vocabulary stored in its dictionary, and dictionaries in general have no manuals of their own. If someone tried to write one book that said precisely how to script every application, it would need to contain a dictionary manual for each application, and would therefore be enormous.While there are books about AppleScript for single applications, Matt Neuburg quite simply wants to get you to see AppleScript through his eyes and learn to use it as he does, finding out what you need to know as you go along.Part 1 - AppleScript Overview starts by identifying when and why you would want to use AppleScript - for example whenever you get bored doing something very repetitive with your computer. Also discussed in this part of the book are the different environments for creating AppleScripts and some of the important concepts and principles.The singular feature of this section is that it contains a complete worked example of how to create an AppleScript to do a repetitive document management task. The example uses Framemaker; this has the disadvantage that people who don't have Framemaker won't be able to try it out. The point is to illustrate that no prior knowledge of the Framemaker dictionary is required - you can figure it out for yourself if you know how to ask the application !Part 2 - The AppleScript Language, is intended as both a reference and instruction. As the author says, 'the order of the exposition is pedagogical' - you are supposed to read the chapters in order. This section explains all the language features and illustrates pitfalls including those caused by forgetting AppleScript is not English.Part 3 - AppleScript in Action, is where, as the author puts it, having learned to use the sword in Part 2, you now go out and do battle. It covers dictionaries, scripting additions, working with applications both scriptable and unscriptable, working with UNIX and finally writing your own applications. Again in this section problems are foreseen and solutions provided.There are appendices on Apple's 'aeut' resource and general AppleScript resources such as websites.HighlightsThe depth of the coverage is amazing and the approach of teaching you how to learn for yourself is refreshing.If you are interested in linguistics as well as computer languages then this book is a delight. A language manual written by a linguist, it frequently compares and contrasts AppleScript to English and other computer languages.Mac Guild GradeA+ (Awesome)Final WordsIf you want to know everything there is to know about AppleScript, then this book is essential.If on the other hand you are looking for a very practical tutorial or cookbook, be warned that after reading all of this book, I still have not typed any 'Hello World' AppleScript into AppleScript Studio. Maybe I just don't do enough boring, repetitive tasks with my Mac.",
                "review/helpfulness": "40/43",
                "num_reviews": 43
            },
            {
                "review/text": "Sorry, but I'm majorly disappointed. A little background. I've taken a few unsuccessful runs at writing workable AppleScripts in the past but never pushed it. Now I foresee the need to jump back into the pond and really learn to swim this time. I'm the author of a successful FileMaker Pro solution which makes me quite skilled within that limited environment. I write no Java, no Perl, no Ruby, no Scheme. Going in I assumed I should be able to pick up AppleScript fairly quickly.Having read all the way through to and well into Chapter 7 I'm giving up. For the most part you're way over my head. You spend a long time, especially in Chapter 6, in highlighting the gotchas of AppleScript well before the basic concepts have been introduced. The assumption of deep familiarity with other programming languages continues on from there.Your text would have been the &quot;Definitive Guide&quot; if it had explained the fundamentals more clearly. No question you know what you're talking about, but for me you've made AppleScript obscure.I'll keep the book on my shelf as reference, but I need another text to guide me into the language.",
                "review/helpfulness": "29/39",
                "num_reviews": 39
            },
            {
                "review/text": "I was so looking forward to a definitive, exhaustive guide to AppleScript, in the manner I've become accustomed to in the O'Reilly series. As for the author, I have mixed impressions, given his uneven contributions to TidBits -- but not so sour as to prevent me from buying this book. Also, I was greatly inspired to use AppleScript from the great, but now hopelessly dated AppleScript book by Danny Goodman: (...)My AppleScript library was thus sorely in need of an updated reference to this handy system utility. After completing it and my attempt to apply anything I learned, I am very disappointed. After an introduction to AppleScript through an example, Neuburg proceeds to regale us with his extensive esoteric knowledge of many utility-related things e.g. scripting languages. However, he fails to deliver a cogent and cohesive discussion on the application of AppleScript. In fact, he proceeds to tear AppleScript apart in a death-by-a-thousand-scratches approach, spending much time on its many idiosyncrasies. We also spend much time as Neuburg delights in his own clever lingual manipulations. This book calls to mind the saying about the key talent of an effective teacher: the ability to make the complex simple, and thus applicable. Neuburg turns this on its head: he further obscures the complex and leaves a cloud of confusion.The end result of reading this book is that I have once again turned to Google as my \"exhaustive\" AppleScript library, and I'll be selling this book. I continue to gaze longingly at my now antiquated Goodman, awaiting the true sequel.",
                "review/helpfulness": "24/30",
                "num_reviews": 30
            },
            {
                "review/text": "I have some programming experience in RealBasic and 4D's scripting language and decided to dive head first into AppleScript. The editorial review on this book says: \"The book assumes no prior knowledge or previous programming experience, but nevertheless seeks to offer a complete treatment of the language's capabilities.\" After I quit reading the book when I got to chapter 11, I can safely say that I absolutely disagree with that statement.I found most of the examples to be very confusing and the numerous references to explain certain exceptions and reasons in later chapters to be very frustrating. Perhaps the nature of AppleScript is just confusing so I do not want to fault the author. If you are looking to learn AppleScript as a total beginner, like me, this is not the book for you.",
                "review/helpfulness": "22/22",
                "num_reviews": 22
            },
            {
                "review/text": "It is refreshing to find a book that is totally honest about the drawbacks of the language it hopes to teach. AppleScript: the Definitive Guide is one such volume. Matt Neuburg delves into all the flaws inherent in this language.AppleScript as a language and development environment has some terrible problems, and I applaud Neuburg for not trying to hide them away. Personally I love the power the language can provide, while loathing it for it's \"English-like\" syntax and the problems inherent in having most of the language defined in differing ways in different applications.One of Applescript's problems is that it is difficult to teach, as you almost have to understand everything before you can know anything. Unfortunately that problem is reflected in this book. Neuburg constantly finds himself having to resort to the \"believe me for now, I'll explain later\" strategy throughout the book.The book is broken up into four sections: \"AppleScript Overview,\" \"The AppleScript Language,\" \"AppleScript In Action,\" and several appendices.\"AppleScript Overview\" is a well written look at what AppleScript is, what it is good for and how to use it. Chapter 3, \"The AppleScript Experience\" is an impressive warts-and-all walk-through of the author developing an AppleScript to solve the problem of renaming files to conform to a particular standard using FrameMaker and the Finder. It is here that the reader will first see the problems inherent with AppleScript as Neuburg battles with incomprehensible dictionaries, unknown object models and uncommunicative error messages to build his script.Part II, \"The Applescript Language,\" is the 200-page core of this book. Neuburg provides a detailed and comprehensive look at every detail of AppleScript's syntax and semantics. The first chapter of this section, \"Introducing AppleScript\" contains a marvelous section entitled 'The \"English-likeness\" Monster' that is a short, sharp (and entirely justified) attack on the problem of AppleScript's attempt to be English-like in syntax.In the rest of this section Neuburg provides an exceptional survey of the language. I personally appreciated his examination of the intricacies of type coercion and the exotic scoping rules. He has also taken the time to write and elaborate a large number of small pieces of code to demonstrate gotchas and tricks throughout the language.It is this section that truly separates this book from every other AppleScript book I have previously read -- it is a masterful guide to the language.Part III is a concrete path towards writing your own scripts. Neuburg starts by examining application dictionaries in depth. The real power of AppleScript lies not in the language itself but in the ability to use language extensions built in to other applications. This also becomes a huge flaw when the only documentation you get is in the application dictionary. As Neuburg puts it \"One purpose of the dictionary is to show the human user how to speak AppleScript to a scriptable application in order to drive that application. But a dictionary, by its very nature, is not completely adequate to this task.\" He then goes on to explain the flaws.The first appendix is a dump of the AppleScript Suite from AppleScript's 'aeut' resource. This is the core of the language usable everywhere. The second Appendix is a good, useful guide to tools and resources for the AppleScript programmer.Taken as whole, this is a great book for the AppleScript programmer, both beginner and expert. It has a good writing style, has been well edited and well constructed. Neuburg may be putting in too many forward references, though. Other reviewers, particularly those newer to AppleScript, have called the book frustrating and confusing. I think this may be due to both the high information density in this book and Neuburg's fast introduction to topics that are better explained later in the book. If you are a newcomer to programming and AppleScript then this may be daunting.If you are new, however, this is still an excellent volume but you may have to force yourself to finish it and then go over at least Part I and II again to truly understand the language. It would probably be a good idea to start trying to build your own scripts after the first read through. I must say, that after taking a good hard look at the way the book has been constructed and ordered I couldn't really come up with a better way that wouldn't have doubled the size of the book.Visit the O'Reilly web page for the book if you would like to see the Table of Contents or grab an example chapter.Neuburg has said \"My approach is not to rely on documentation, ... but to bang away at the language itself, testing and experimenting, trying to deduce the underlying rules\" and this approach has certainly borne fruit in this volume. For all it's minor flaws you cannot say, as may be true of many other tech books, that it is a rewrite of the documentation. He has approached the problem from a different direction and given us a book that offers an excellent guide to the language.I would recommend it to all Macintosh owners as the perfect way to unleash another powerful aspect of your system. For people who have no AppleScript or programming experience who want to be totally spoon fed this book is probably only a 5/10, for people with a little AppleScript experience, a fair amount of programming experience and a willingness to stick through to the end this book is probably a 9/10. It is certainly the best book on AppleScript I have seen.",
                "review/helpfulness": "18/20",
                "num_reviews": 20
            },
            {
                "review/text": "Less than two years ago, I made the switch from an MS OS to a Mac. I was thrilled to pieces to be able to make the change after about ten or twelve years on the other platform. Of course, I thought I knew a lot and yes, perhaps I did, and when I got to the Mac, I felt about clueless. Thus, I was eager to learn something more and more. Okay?? this was my motivation. I got one book...Mac OS X Hacks...and pretty much breezed through that peeking at this chapter or that after giving it the once over. In that book, it briefly touched on AppleScripting and after that treatment I wanted more, more, more. I was eager to learn.In my \"past life\" I had studied programming some and knew that it might be a little intimidating but I desperately and anxiously wanted to accelerate my learning on this new toy. So I got AppleScript: the Definitive Guide as it was supposedly a great book for those who were just beginning to explore AppleScripting and a great reference for experienced scripters.What did I know? Not a whole lot. After getting through the first section, I felt forewarned and ready to roll. Sure, I'm not totally through this book but what I've seen so far seems to pretty much equip just about anyone to follow through on the quest to learn AppleScripting. I've been told that to build a good house, one needs a good foundation. It really seems that that is what is happening in the first two sections of this book. And it goes from there.Matt Neuburg gives us tools and helps us to think on our own. He prepares us for what seems to be an undaunting task in front of us. He tells us that he doesn't know everything and we probably won't either. He shows us how he did not back down and prepares us to follow the same methods and warns us about what may be ahead of us. This does NOT seem to be such a bad thing. It's something like a life skill. Sometimes the best tools a teacher can use are a gag and a pair of handcuffs while the student ventures out on his/her own to make a few mistakes and learn by doing. Why fear that sort of treament by Matt Neuburg?Perhaps some are forced into learning AppleScript and that is somewhat offputting. My experience is different and I am motivated to learn. I have to say, I would be less than thrilled with any book if I were put in a position of having to learn this. It certainly casts a different light on your experience to be in such a position.In my opinion, I have to wonder if there are some that just don't quite want to learn. It may be so. If not, I beg your forgiveness for thinking that you're not motivated enough. I'm thrilled to be doing this and to have Matt Neuburg's book to help in my quest.Thanks Matt.",
                "review/helpfulness": "12/18",
                "num_reviews": 18
            },
            {
                "review/text": "I have been a scripter going on 12 years and have written scripts for pretty much every scriptable app. Other than Danny Goodman's book written a long time ago, there has not been reference book that is as thorough and as enjoyable as Applescript: The Definitive Guide. I bought one copy and then bought another so I could have a copy at work and at home.If you are new to scripting and looking for a basic manual or, if like me, you are self-taught and looking to fill in the blanks, this is the book for you. I don't know how Mr. Nueburg has done it, but he has managed to meet the needs of the newbie and the expert. Concepts such as the scoping of handlers, how script objects work, recursion and my personal favorite, lists, are explained in a way that anyone can understand. So many of these types books are written in what I call &quot;high academic&quot; making it nearly impossible for anyone but Ph.D in computer science to understand. This is not one of those books. Even though Matt Nueburg has a long career in the industry, he does not treat AppleScript as if he were writing his thesis on it.It is also Nueburg's credit that he wrote and tested every script in the book which are also very easy to understand. I've seen too many AppleScript examples that read as if they were prepared by an Assembly Language programmer rather than playing to what is supposed to be one of AppleScripts strengths-readability.Nueburg writes clearly, concisely and with a sense of humor and never taken himself or his subject matter too seriously. I mean how many reference books have you read that make you laugh out loud? I can't think of any. I just can't say enough about how excited I am to finally have this book. It is terrific and I recommend it highly.",
                "review/helpfulness": "14/17",
                "num_reviews": 17
            },
            {
                "review/text": "In writing this book, the author expressed a desire to create a &quot;complete explanatory manual&quot; for beginners and veterans alike. He clearly appreciates the immense power of the language, while also obviously enjoying AppleScript's challenges and quirks. The book is billed as requiring no prior AppleScript or programming experience, but having some of each is a definite asset; there are many occasions where some knowledge of programming concepts or other languages appears to be assumed.The structure of the book is somewhat confusing. It starts off well with some practical examples, but then moves into very complex terrain, having the potential to quickly leave the AppleScript newbie behind. Throughout the book, Neuburg discusses many of the quirks and nuances of dealing with AppleScript. It could be argued that he deals with too many of these quirks, which gives the book a somewhat choppy feel at times. The value, however, is that this treatment does lend a sense of reassurance - when you're banging your head against the keyboard because a script doesn't work as expected, it's good to know that the language is not without unique &quot;personality&quot; and that you're not alone. This may not always help you get your script running any faster, but what a sense of camaraderie!Far and away the best feature of the book is the third chapter, where the author walks through the &quot;AppleScript Experience.&quot; In this chapter, the reader is led through the step-by-step process of how the author develops a real script to take care of an otherwise long and tedious repetitive task - exactly the sort of thing that AppleScript is designed for. Neuburg explains the thought process of building the script, and provides each iteration of code along the way, warts and all, until all of the kinks are worked out. This was both educational and entertaining, and we could easily put ourselves into the same place, having been there before. It should be noted that the thought process of creating a script is really one of the most challenging, and poorly explained, aspects of coding in general. If you're new to programming, you likely expect that learning the technical syntax and structure is the hard part, but in reality that's easy in comparison to wrapping your head around what to do with this technical knowledge. Neuburg's tour of his headspace during the scripting process is invaluable and you'll gain some worthwhile vicarious experience in Chapter 3.Bottom line: it's a great book if you can follow it, and a hard read if it loses you. It makes for an excellent reference source, and is certainly a comprehensive look at the language, covering all of the significant aspects of coding with AppleScript. We would expect veterans to find this book to be a well written in-depth discussion, while most beginners (to programming) would likely be more than a bit intimidated. It is perhaps most ideally suited to programmers of other languages that are new to AppleScript, but can rely on their background knowledge and interest to relate to the finer points presented.",
                "review/helpfulness": "15/16",
                "num_reviews": 16
            }
        ]
    },
    {
        "Title": "aspectj in action practical aspectoriented programming",
        "description": "Explains the concepts of aspect-oriented programming and the basics of the AspectJ language.",
        "authors": "['Ramnivas Laddad']",
        "infoLink": "http://books.google.com/books?id=2efVVV8G6oMC&dq=Aspectj+in+Action:+Practical+Aspect-Oriented+Programming&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 1.0,
        "review": [
            {
                "review/text": "Ramnivas Laddad wrote a comprehensive book on AOP with the focus on AspectJ. He deals with AOP and AspectJ basics, explains the (sometimes fine) differences in advice declarations, and cleans up the myths and prejudices on AOP.Going further Ramnivas uses real-life examples to show step by step how to use Aspects in your daily work. He explains how to transform a pure Java based solution to a cleaner, more structured AspectJ solution. The reader can see that the AspectJ solution is more elegant and can always understand how Ramnivas came to his solutions. Ramnivas explains this for cruicial topics most developers have to face, for example logging or thread safety.Special bonus is the chapter on aspect design patterns. Ramnivas shows four design patterns, that don't exist in the non-AOP world. They are quite useful in AOP, though, and AFAIK there is no other source for this important information.&quot;AspectJ in action&quot; is a book for beginners as well as for advanced AspectJ programmers. It is well written and easy to understand. The real-world examples allow you to transfer the solutions on a 1:1 basis to your project and thus try in real life how aspects work for you.",
                "review/helpfulness": "19/20",
                "num_reviews": 20
            },
            {
                "review/text": "I have got this book at local Austin Java User Group meeting. First impression: different cover. Most of Manning books are either greenish or almost black-and-white. This one is yellow.Part 1 provides really good introduction into AOP. This is the first book I have read on AOP; all stuff I have seen before was online or magazine articles. One interesting fact is that this book took a while to consume, compared to the usual two-week cycle I have for technical books. I guess the reason is that the book has more substance than most of the techincal books and Mannigs does not try to pad their books with API references and other stuff that can be easily found online. After the chapter goes through AOP concepts, it explains AspectJ in application to those concepts. Basic syntax as well as some advanced techniques are explained.Part 2 has examples of basic applications of AspectJ. Of course it starts with the mandatory logging implemented using AOP. Not a very good example in general, since logging is not really a cross-cutting concern, but works for illustration purposes. Other two application areas discussed in this part are implementation policy enforcement and optimization (pooling and caching examples). Policy enorcement part is really interesting, especially if you are into call patterns.In general, every part follows the same pattern: first the author discusses the conventional approach, then explains challenges of the conventional solution, provides AspectJ-based solution, and gives one or two examples. Very clean language, easy to follow.Part 3 discusses advanced applications of AspectJ. First it delves into design patterns and idioms of AOP; it's not by any means AspectJ-specific, so would be useful for any AOP implementation. Examples of patterns are providing thread-safe implementations using AspectJ, implementing security (very interesting discussion on JAAS), transaction management, and implementing business rules using AspectJ. The part ends with AspectJ usage in different development phases.Two appendices: description of AspectJ compiler and Ant integration - only 15 pages for both. Useful as a reference.Overall impression: an excellent book. Definitely worth reading, even if you are not into AOP yet.",
                "review/helpfulness": "19/19",
                "num_reviews": 19
            },
            {
                "review/text": "I met the author of this book this weekend, and saw him give a presentation on this material. Finally, a book that shows real uses for AOP.I have been watching AspectJ since I first saw it about a year ago. My first impression was that it was 'cool', but was worried about giving developers more rope with which to hang themselves. Yes, it was cool, but the most practical examples you would see in demos were thing like 'logging'. I was worried that it would just lead more more ways for junior engineers to 'convolute the code', without bringing much benefit for that risk.The material in this book, ALONG WITH the support the author had from the Eclipse IDE changed my mind. Finally, there were some real examples involving transaction support, JAAS, exception handling, and more. Furthermore, he addressed these topics in the real-world sense of refactoring existing code to prove his points.If you aren't using an IDE that gives you some support, then I still have my concerns about 'convoluting' your code; but I am more convinced than ever that AOP concepts are worth putting into my mental toolkit. I have no doubt that the way aspects 'inject' behavior into code will reduce our development time, and make our code behave more consistently (no errors because of inconsistencies in the way common things are handled). If you can add one more ball to the things you 'mentally juggle' while developing, add AOP concepts. This book will help.",
                "review/helpfulness": "10/10",
                "num_reviews": 10
            },
            {
                "review/text": "I am a beginer in AOP and before I picked this book, terms like point cuts, advice sounded greek and latin to me. However after reading through the book, I now know exactly what AOP is and how to program using AspectJ.AOP seems to have come of age and this book is excellent resource to come upto speed.The book is divided into three parts.The first prat introduces AOP, why AOP and about AspectJ in a very easy to understand manner. Best intro I have ever read.Then it introduces the syntax of AspectJSecond part introduces more advanced techniques and makes you really good at AspectJ.Third part of the book is a real gem. Here you find, excellent and practicval uses of AOP in every day scenarios.I am currently reading this part now and I feel confident talking to my boss to start using AOP at work.A must read for anyone wanting to study AOP",
                "review/helpfulness": "7/7",
                "num_reviews": 7
            },
            {
                "review/text": "AspectJ In Action is a great book to use as an introduction to Aspect-oriented Programming. However, AOP is not for developers to whom Java and OO are still new. Without a comfortable understanding of classes, polymorphism, and encapsulation AOP will only further confuse things.With that said, AspectJ In Action is a wonderful book filled with plenty of examples and explanations about the well-lit areas of AOP as well as many of the dark corners. I enjoyed reading this book because it starts out with the fundamentals and works its way to more and more complex uses of AOP without getting bogged down in language tangents. Also, the direct application of AOP in real Java design areas is very helpful in getting a better feel for when and how AOP can be applied.I am looking forward to Ramnivas Laddad's next book!",
                "review/helpfulness": "5/5",
                "num_reviews": 5
            },
            {
                "review/text": "I loved this book, first of all the introduction is the most interesting presentation of AOP that I ever read.The other chapters are very good too since based on use-cases very easy to reproduce on projects...A book to have is you want to learn abour AOP (even if not interested by AspectJ per se...)",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            }
        ]
    },
    {
        "Title": "pro apache log4j",
        "description": "* Illustrates each concept with code samples in Java language; provides guidelines for different application-specific needs. * Describes the techniques to distribute the logging activity-critical to implement in an enterprise-wide logging framework. * The only Java Logging book on the market, and includes Best Practices guidelines.",
        "authors": "['Samudra Gupta']",
        "infoLink": "http://books.google.com/books?id=HdGjzQEACAAJ&dq=Pro+Apache+Log4j&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "This is not a large book by any stretch, but it packs a lot in. There's all sorts of stuff I hope I never need to know about log4j here, and there's examples of almost all of it. It would be a bit of overkill for what I need, except that it is also very logically organized.A word of warning, though. This book is not a simple recipe book for log4j. The examples are helpful, but they serve to illustrate the exposition of the API. If you don't want to see or understand what log4j is doing behind the curtain, you'll get a limited benefit. I am somewhere on the fence here. I've toured the book, pulled out what I can use now, and plan to return to get a better understanding of the inner workings later.",
                "review/helpfulness": "5/7",
                "num_reviews": 7
            },
            {
                "review/text": "Of all the Apress publications I've read, this is by far the best. This book provides a wonderful introduction, refresher or skill set extension for Log4J. I recommend this book for the beginner to moderate Log4J user.Quick, concrete examples and explanations are the strong point of this book. It's fast and easy to read (I was able to read the book and work through it in a single day) and provided me with not only an understanding of Log4J, its core competencies and the business requirements that it meets, but also provided me with a creative inspiration.Many of the topics covered can provide you with ideas of your own for existing or future applications that you are or will be working on. Reading this book will provide you with a foundation for using Log4J effectively in your own applications.I do, however, recommend reading some of the other extensive Log4J books for more detailed information. However, this will serve you as a wonderful reference and overview of the technology.",
                "review/helpfulness": "2/3",
                "num_reviews": 3
            },
            {
                "review/text": "This is an excellent reference. However, be aware that it does not provide much that isn't readily available in the composite of a couple of references available on-line on the Apache web site. I am very happy with the book, because I prefer to have a reference I can use off-line and at the side of my computer instead of in a window buried beneath my work.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "websters new world american idioms handbook",
        "description": "The largest barrier to fluency in English is the ability to understand and use idiomatic language. Webster's New World American Idioms Handbook walks readers through learning and using American idioms, with complete explanations for over 1,000 idioms. Emphasizing acquisition, application, and understanding, this book offers all the information readers need to know about when, where, why, and how to use them. It includes a wealth of examples to provide users with context. Thorough explanations help readers identify which idioms are appropriate for which situations. An extensive index allows easy, helpful access to individual idioms so that they can be found quickly.",
        "authors": "['Gail Brenner']",
        "infoLink": "https://play.google.com/store/books/details?id=wLPqDwAAQBAJ&source=gbs_api",
        "categories": "['Foreign Language Study']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "It is a MUST for foreign people wanting to master the English language. It is very didactic, has a lot of practical examples, and it is organized according to topics (idioms for business, idioms for love, idioms to describe emotions, etc). There can be other books with more number of idioms, but they are not didactic. This one has the most important and common. You will not need more.There are a lot of idioms in the movies and conversations, and now I can understand them.",
                "review/helpfulness": "50/55",
                "num_reviews": 55
            },
            {
                "review/text": "Very useful for intermediates that look for an improvement of their English level. Easy to read and a well structured handbook.",
                "review/helpfulness": "11/14",
                "num_reviews": 14
            },
            {
                "review/text": "Extensive idiom dictionary that is very well-organized. This is a pretty good edition for anyone looking to learn more about idioms in the english language, and the categories make it easy to find everything you are looking for. This is a pretty handy book to have sitting next to you while you are writing speeches. Enjoy!Todd HagopianPresident/CEOHagopian InstituteAuthor of the popular \"Quote Junkie\" book sereies and the brand new \"Idiom Junkie\" series",
                "review/helpfulness": "5/6",
                "num_reviews": 6
            },
            {
                "review/text": "First order of business: I did not read this book. I purchased it as a gift for a friend. She is originally from China and has some trouble still with English. She is always asking us (friends) to clarify what we mean when we use English expressions or make American pop culture references. I drew her name for a Secret Santa gift swap and chose this book, thinking that it was practical, but also a poking a bit of fun at her. It had the perfect effect of making everyone giggle (a bit of racism among friends is funny, right?) but also being completely useful to her! She tells me that it's a great book and she actually uses it to look up new phrases as she encounters them.",
                "review/helpfulness": "5/5",
                "num_reviews": 5
            },
            {
                "review/text": "It is a must have for those who wants to learn American idioms. It classifies the idioms into different categories, so that it is very clear for the reader.",
                "review/helpfulness": "4/5",
                "num_reviews": 5
            },
            {
                "review/text": "I am a foreign student. I think this book is very helpful to improvemy English skill. Fast delivery and very good condition. Thank you.",
                "review/helpfulness": "2/3",
                "num_reviews": 3
            },
            {
                "review/text": "Every home/office library needs at least one of these. I enjoy just sitting down and reading this like you would any other book. Highly Recommended!!",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "msmq from scratch from scratch",
        "description": "This work is designed to enable the reader to design program-to-program communication strategies to fully integrate an order entry, processing and fulfillment application. The user can learn architectural and enterprise strategies while setting up a sample application, and learn how to send and receive messages using the message queue. The book shows how to build and implement the order tracking system, and add tracking and reporting capability and security features. It also demonstrates how MSMQ communicates with IBM's MQSeries using Level8's Falcon bridging technology.",
        "authors": "['Neil Crane', 'Chris Crummer', 'Daniel Miller']",
        "infoLink": "http://books.google.nl/books?id=FRNyOwAACAAJ&dq=MSMQ+From+Scratch+(From+Scratch)&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "This book helped me in that I am completely new to DNA programming and until a month ago, had no idea what MSMQ even did. However, it does not go into enough detail to help a person set up anything beyond a simple system internal to one enterprise. If you are looking for help implementing queuing across enterprises (as I was), you'll have to go elsewhere.",
                "review/helpfulness": "7/7",
                "num_reviews": 7
            },
            {
                "review/text": "This is for beginners only. Examples and explainations are very simplistic and do not provide the detail necessary for creating a real world messaging application. Much effort is expended providing information on using the Visual Basic IDE and on creating a UI. The code examples also demonstrate poor programming practices. I would not recommend this book to anyone. If you would like a good MSMQ reference buy Designing Applications with MSMQ by Alan Dickman. It is not perfect but is the most comprehensive text on MSMQ that I have read so far.",
                "review/helpfulness": "7/7",
                "num_reviews": 7
            },
            {
                "review/text": "This book is reasonably good for a complete novice but: 1. All the examples are in VB, no C++. 2. Very introductory. Much more info can be found on MSDN. 3. It focuses more on workflow design than MSMQ per se.",
                "review/helpfulness": "4/4",
                "num_reviews": 4
            },
            {
                "review/text": "I started MSMQ a month ago and found this book quite useful for novice like me. It starts with concepts and them implement it in the following chapters.Sometimes find it a bit hard to follow as the steps are not given in full.Does not include info to set up the MSMQ environment properly as this is also very much helpful for beginner.Conclusion : 3 stars book. Could be further improved.",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            },
            {
                "review/text": "Overall I thought this book explained key topics of MSMQ very well. The book starts with a simple example, then devotes about 7 chapters to slowly building a fully functional MSMQ application explaining every step along the way. The problem? One word - typos! The book is VERY hard to follow in some places. When entering code examples, the book does not tell you what module you're entering the code into. It has the tendency to start a module, start a new module, then go back to it later. At one point, I couldn't figure out where the code was supposed to go, so after downloading the code from their website, I figured out they had started a completely seperate application and not told us! Also there's some generally bad programming practice and typos, stuff that should've been caught by the editors.It's really a shame because I think the book has a lot of promise for future printings, but it's in SERIOUS SERIOUS need of editing. Wait for the next edition.",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "curl programming bible",
        "description": "Provides readers with an in-depth understanding of Curl technologies and how to apply them to real world situations. Coverage includes: * Curl language syntax * Text formatting, scripting, OO programming and rich 3D graphics. * Support for emerging technologies, like SOAP, Web Services and Peer to Peer * Incorporating Curl technologies into existing Web infrastructure * Embedding Curl content within an HTML page * Accessing Databases on the server * Creating and packaging Curl applets for Web delivery ABOUT THE WEB SITE * Source code and examples * Links to Curl developer resources such as white papers and developer forums * Links to download the Surge Development Lab and Surge Plug-in",
        "authors": "['Nikhil Damle', 'Gary Gray', 'Bruce Mount']",
        "infoLink": "http://books.google.nl/books?id=BOpSAAAAMAAJ&dq=Curl+Programming+Bible&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": NaN,
        "review": [
            {
                "review/text": "Need to be sure that this book represents what you want. I did not realize that there were two kinds of 'curl'. Actually, I erred - really wanted cURL functions.",
                "review/helpfulness": "8/8",
                "num_reviews": 8
            },
            {
                "review/text": "I've been involved with the Curl language for a while, and the Curl Programming Bible is clearly the best book on the market at the moment. It provides a good counterbalence to the online docs that are included with the Curl IDE (Surge Lab). I often prefer to have a printed version of how something works in front of me, as opposed to having to switch around through a ton of open windows on the computer, and the Bible is well written and clearly organized. I reccommend this book to anyone who is looking at writing an application with the Curl language -- it doesn't cover the latest version of Curl (the book covers the 1.7 API and the current release is 2.0.1), but the changes are quite minor so this isn't much of an issue. If you have already done a lot of work with Curl, then the Bible is probably a bit less interesting -- the new 'Enterprise Curl' book sounds more promising in this area (but I haven't read it yet).",
                "review/helpfulness": "2/2",
                "num_reviews": 2
            }
        ]
    },
    {
        "Title": "active server pages 30 by example",
        "description": "What is this book about? ASP is the future of the web. If you're looking for a way to create attractive, intelligent web pages or, if you're just looking for a way to extend your HTML know-how, then ASP is an effective way to achieve your goals. With ASP, you can customize your web pages to be more dynamic, more efficient and more responsive to your users. It's not just a technology, though - to get the best out of ASP, you'll be using it in tandem with HTML, and with one or more of the web's simple scripting languages. The book will teach you everything you need to create useful real-world applications on the web. What does this book cover? Teaches VBScript as an integral part of learning to use ASP Describes how to make your pages more dynamic with HTML and script code Covers writing and debugging script code Explains how to set up ASP, what software to use, and how to administer your pages Shows how you can access databases to give dynamically updated web pages Introduces object-based programming and shows you how to use ASP objects Provides the foundation for you to write useful, real-world dynamic web pages Includes a fully worked sample application to demonstrate the power of ASP Loaded with examples and useful tips Introduces XML, one of the latest web programming technologies, and explains its use in conjunction with ASP Who is this book for? This book is for anybody with a grasp of HTML who wants to add more to their web pages. It also covers VBScript - a simple Internet programming language. This makes it the ideal first step for the aspiring web professional. It's also useful for more experienced programmers looking for a practical, no-nonsense introduction to ASP and programming for the web. What do you need to use this book? To get the most out of this book you should be running Windows 2000, which includes ASP 3 - the latest version of this popular technology.",
        "authors": "['David Buser', 'John Kauffman', 'Juan T. Llibre', 'Brian Francis', 'Dave Sussman', 'Chris Ullman', 'Jon Duckett']",
        "infoLink": "http://books.google.com/books?id=bY8LAAAACAAJ&dq=Active+Server+Pages+3.0+by+Example&hl=&source=gbs_api",
        "categories": "['Computers']",
        "ratingsCount": 3.0,
        "review": [
            {
                "review/text": "Although HTML is the language of the world wide web, the real action is carried out by code that resides on the server. The life and death operations of a business to business (B2B) or business to consumer (B2C) e-business are the web pages created on the server by programs that accept data from the client and interact with server-side databases. One of the most widely used technologies is the Active Server Pages (ASP) technology created by Microsoft. Naturally, given its paternal origins, the scripting language used throughout is VBScript, the pared down version of Visual Basic.This is one of those books where the promises made by the title are kept. The topics are all presented by examples of working code, which in most cases is understandable and effectively carries out the operations to be demonstrated. The initial two chapters are introductions to the ASP model and the VBScript programming language. By necessity brief and somewhat incomplete, the treatment of the ASP model is adequate although the reader with no experience in VBScript will probably have to consult other resources.The middle chapters are used to present the basics of how ASP files run on the server and how communication with the client pages is accomplished. This is as good an introduction of this critical matter as I have seen. Topics covered include the global.asa file, the ActiveX Data Object (ADO), cookies, SQL connection and recordset objects; ad rotators and counters; and how to use installable components.The later chapters are devoted to the creation of a more elaborate site designed to implement an online educational institution. This involves the creation and updating of address books, a login page with security that prevents unauthorized access and sending e-mail messages among other things. Interacting with databases using SQL commands forms an integral part of the site. While not a complete model for all things one could or would do on an e-commerce site, it is complete enough so that you can learn what is necessary to understand the structure of such sites.ASP is not the only technology used to dynamically create web pages, the effectiveness of which makes or breaks any e-business site. However, it is currently the most popular and should be learned by anyone with a serious interest in commerce on the web. This book is a valuable and effective tool in learning those critical lessons.",
                "review/helpfulness": "11/11",
                "num_reviews": 11
            },
            {
                "review/text": "Being a beginner with ASP I bought this book as a tutorial to learn ASP. I have access to ASP professional Developers so I was able to ask a lot of questions in learning ASP. The code and explainations that are in the book are not clear and are hard to understand. I had to ask many questions. The code seemed to be hard to follow. The Developers that I have access to felt that the Author used too many 'functions' when they were not needed (this made the code hard to follow.) I am going to have to buy another book to learn from. This book may be good for refrence, but not learning from.",
                "review/helpfulness": "6/7",
                "num_reviews": 7
            },
            {
                "review/text": "In terms of adding to the reviews so far, I would say that Reselman does a good job of introducing real-life programming issues in context. He walks you through those 'gotchas' that you will encounter.No surprise that the book has no javascript examples to speak of, focusing on vbscript. That's good at the intro level -- you've got enough to learn about without having javascript syntax problems all the time. I agree that it's a good reference, but because the examples are concrete (one is called 'using ASP to add a record to an ODBC datasource'). If you use this stuff much, you'll want to use functions a lot -- hopefully you might be able to reuse some code -- so I wouldn't put too much credence in the low review).In terms of prerequisites, I would think it useful to have some general SQL knowledge (&quot;sql for dummies&quot; is a great add-on -- you'll be using SQL for all data access, so getting it down is key), and some basic HTML as well. Other than that, I found it very straight-forward.Cheers!",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            },
            {
                "review/text": "Excelent book for beginner to learn ASP. A lot of grahpics and figures in it help you to grasp the structure of ASP code.",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            },
            {
                "review/text": "author try to explain the material with examples.that is what reader wants.good book for beginers.worth for its price.",
                "review/helpfulness": "2/3",
                "num_reviews": 3
            },
            {
                "review/text": "Regardless of how good the text in any programming book is, the book is pretty much useless if there is not adequate support for the code - particularly in a &quot;By Example&quot; book - which this book purports to be. The book contains no CD to test your code against the authors. Well, that would be OK if there were the support files online - like Wrox has; but NO. No supporting code anywhere. And don't be fooled by the &quot;Where to find the Code&quot; heading in the Introduction - it just points you to sample code for a single chapter. I encountered &quot;internal server error HTTP: 500&quot; in one of the exercises, and wanted to test my code to what the author had written. No such luck. Was it me? Maybe. Was it the code in the book? I'll never know... Buy &quot;Beginning Active Server Pages 3.0&quot; published by Wrox. They know how to support their products. As for this publisher, they don't have a QUE.",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            },
            {
                "review/text": "Read a good tech-book is enjoyable.This book will save your time and money, because this the book everyone can understand, and there are lot of meal in it. The author was thinking while writing the book. He is the master for making the reader to understand what he is talking about.The most I like is there are a lot of graphics and figure in the book to illustrate structure of ASP and programming code. One piucture worths a ton of words! -- It should be a standard in tech-book.Thanks the author!",
                "review/helpfulness": "3/3",
                "num_reviews": 3
            }
        ]
    }
]